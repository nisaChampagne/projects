{"ast":null,"code":"'use strict';\n\nvar Preprocessor = require('./preprocessor'),\n    UNICODE = require('../common/unicode'),\n    neTree = require('./named_entity_data'); //Aliases\n\n\nvar $ = UNICODE.CODE_POINTS,\n    $$ = UNICODE.CODE_POINT_SEQUENCES; //Replacement code points for numeric entities\n\nvar NUMERIC_ENTITY_REPLACEMENTS = {\n  0x00: 0xFFFD,\n  0x0D: 0x000D,\n  0x80: 0x20AC,\n  0x81: 0x0081,\n  0x82: 0x201A,\n  0x83: 0x0192,\n  0x84: 0x201E,\n  0x85: 0x2026,\n  0x86: 0x2020,\n  0x87: 0x2021,\n  0x88: 0x02C6,\n  0x89: 0x2030,\n  0x8A: 0x0160,\n  0x8B: 0x2039,\n  0x8C: 0x0152,\n  0x8D: 0x008D,\n  0x8E: 0x017D,\n  0x8F: 0x008F,\n  0x90: 0x0090,\n  0x91: 0x2018,\n  0x92: 0x2019,\n  0x93: 0x201C,\n  0x94: 0x201D,\n  0x95: 0x2022,\n  0x96: 0x2013,\n  0x97: 0x2014,\n  0x98: 0x02DC,\n  0x99: 0x2122,\n  0x9A: 0x0161,\n  0x9B: 0x203A,\n  0x9C: 0x0153,\n  0x9D: 0x009D,\n  0x9E: 0x017E,\n  0x9F: 0x0178\n}; // Named entity tree flags\n\nvar HAS_DATA_FLAG = 1 << 0;\nvar DATA_DUPLET_FLAG = 1 << 1;\nvar HAS_BRANCHES_FLAG = 1 << 2;\nvar MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG; //States\n\nvar DATA_STATE = 'DATA_STATE',\n    CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',\n    RCDATA_STATE = 'RCDATA_STATE',\n    CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',\n    RAWTEXT_STATE = 'RAWTEXT_STATE',\n    SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',\n    PLAINTEXT_STATE = 'PLAINTEXT_STATE',\n    TAG_OPEN_STATE = 'TAG_OPEN_STATE',\n    END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',\n    TAG_NAME_STATE = 'TAG_NAME_STATE',\n    RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',\n    RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',\n    RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',\n    RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',\n    RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',\n    RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',\n    SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',\n    SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',\n    SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',\n    BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',\n    ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',\n    AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',\n    BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',\n    ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',\n    CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',\n    AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',\n    SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',\n    BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',\n    BOGUS_COMMENT_STATE_CONTINUATION = 'BOGUS_COMMENT_STATE_CONTINUATION',\n    MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',\n    COMMENT_START_STATE = 'COMMENT_START_STATE',\n    COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',\n    COMMENT_STATE = 'COMMENT_STATE',\n    COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',\n    COMMENT_END_STATE = 'COMMENT_END_STATE',\n    COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',\n    DOCTYPE_STATE = 'DOCTYPE_STATE',\n    DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',\n    AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',\n    BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',\n    BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',\n    BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',\n    AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',\n    CDATA_SECTION_STATE = 'CDATA_SECTION_STATE'; //Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\n\nfunction isWhitespace(cp) {\n  return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n  return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n  return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n  return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n  return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n  return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isDigit(cp, isHex) {\n  return isAsciiDigit(cp) || isHex && (cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F || cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F);\n}\n\nfunction isReservedCodePoint(cp) {\n  return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n  return cp + 0x0020;\n} //NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\n\n\nfunction toChar(cp) {\n  if (cp <= 0xFFFF) return String.fromCharCode(cp);\n  cp -= 0x10000;\n  return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);\n}\n\nfunction toAsciiLowerChar(cp) {\n  return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n  var branchCount = neTree[++nodeIx],\n      lo = ++nodeIx,\n      hi = lo + branchCount - 1;\n\n  while (lo <= hi) {\n    var mid = lo + hi >>> 1,\n        midCp = neTree[mid];\n    if (midCp < cp) lo = mid + 1;else if (midCp > cp) hi = mid - 1;else return neTree[mid + branchCount];\n  }\n\n  return -1;\n} //Tokenizer\n\n\nvar Tokenizer = module.exports = function () {\n  this.preprocessor = new Preprocessor();\n  this.tokenQueue = [];\n  this.allowCDATA = false;\n  this.state = DATA_STATE;\n  this.returnState = '';\n  this.tempBuff = [];\n  this.additionalAllowedCp = void 0;\n  this.lastStartTagName = '';\n  this.consumedAfterSnapshot = -1;\n  this.active = false;\n  this.currentCharacterToken = null;\n  this.currentToken = null;\n  this.currentAttr = null;\n}; //Token types\n\n\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN'; //Tokenizer initial states for different modes\n\nTokenizer.MODE = {\n  DATA: DATA_STATE,\n  RCDATA: RCDATA_STATE,\n  RAWTEXT: RAWTEXT_STATE,\n  SCRIPT_DATA: SCRIPT_DATA_STATE,\n  PLAINTEXT: PLAINTEXT_STATE\n}; //Static\n\nTokenizer.getTokenAttr = function (token, attrName) {\n  for (var i = token.attrs.length - 1; i >= 0; i--) {\n    if (token.attrs[i].name === attrName) return token.attrs[i].value;\n  }\n\n  return null;\n}; //API\n\n\nTokenizer.prototype.getNextToken = function () {\n  while (!this.tokenQueue.length && this.active) {\n    this._hibernationSnapshot();\n\n    var cp = this._consume();\n\n    if (!this._ensureHibernation()) this[this.state](cp);\n  }\n\n  return this.tokenQueue.shift();\n};\n\nTokenizer.prototype.write = function (chunk, isLastChunk) {\n  this.active = true;\n  this.preprocessor.write(chunk, isLastChunk);\n};\n\nTokenizer.prototype.insertHtmlAtCurrentPos = function (chunk) {\n  this.active = true;\n  this.preprocessor.insertHtmlAtCurrentPos(chunk);\n}; //Hibernation\n\n\nTokenizer.prototype._hibernationSnapshot = function () {\n  this.consumedAfterSnapshot = 0;\n};\n\nTokenizer.prototype._ensureHibernation = function () {\n  if (this.preprocessor.endOfChunkHit) {\n    for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) this.preprocessor.retreat();\n\n    this.active = false;\n    this.tokenQueue.push({\n      type: Tokenizer.HIBERNATION_TOKEN\n    });\n    return true;\n  }\n\n  return false;\n}; //Consumption\n\n\nTokenizer.prototype._consume = function () {\n  this.consumedAfterSnapshot++;\n  return this.preprocessor.advance();\n};\n\nTokenizer.prototype._unconsume = function () {\n  this.consumedAfterSnapshot--;\n  this.preprocessor.retreat();\n};\n\nTokenizer.prototype._unconsumeSeveral = function (count) {\n  while (count--) this._unconsume();\n};\n\nTokenizer.prototype._reconsumeInState = function (state) {\n  this.state = state;\n\n  this._unconsume();\n};\n\nTokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {\n  var consumedCount = 0,\n      isMatch = true,\n      patternLength = pattern.length,\n      patternPos = 0,\n      cp = startCp,\n      patternCp = void 0;\n\n  for (; patternPos < patternLength; patternPos++) {\n    if (patternPos > 0) {\n      cp = this._consume();\n      consumedCount++;\n    }\n\n    if (cp === $.EOF) {\n      isMatch = false;\n      break;\n    }\n\n    patternCp = pattern[patternPos];\n\n    if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n      isMatch = false;\n      break;\n    }\n  }\n\n  if (!isMatch) this._unconsumeSeveral(consumedCount);\n  return isMatch;\n}; //Lookahead\n\n\nTokenizer.prototype._lookahead = function () {\n  var cp = this._consume();\n\n  this._unconsume();\n\n  return cp;\n}; //Temp buffer\n\n\nTokenizer.prototype.isTempBufferEqualToScriptString = function () {\n  if (this.tempBuff.length !== $$.SCRIPT_STRING.length) return false;\n\n  for (var i = 0; i < this.tempBuff.length; i++) {\n    if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) return false;\n  }\n\n  return true;\n}; //Token creation\n\n\nTokenizer.prototype._createStartTagToken = function () {\n  this.currentToken = {\n    type: Tokenizer.START_TAG_TOKEN,\n    tagName: '',\n    selfClosing: false,\n    attrs: []\n  };\n};\n\nTokenizer.prototype._createEndTagToken = function () {\n  this.currentToken = {\n    type: Tokenizer.END_TAG_TOKEN,\n    tagName: '',\n    attrs: []\n  };\n};\n\nTokenizer.prototype._createCommentToken = function () {\n  this.currentToken = {\n    type: Tokenizer.COMMENT_TOKEN,\n    data: ''\n  };\n};\n\nTokenizer.prototype._createDoctypeToken = function (initialName) {\n  this.currentToken = {\n    type: Tokenizer.DOCTYPE_TOKEN,\n    name: initialName,\n    forceQuirks: false,\n    publicId: null,\n    systemId: null\n  };\n};\n\nTokenizer.prototype._createCharacterToken = function (type, ch) {\n  this.currentCharacterToken = {\n    type: type,\n    chars: ch\n  };\n}; //Tag attributes\n\n\nTokenizer.prototype._createAttr = function (attrNameFirstCh) {\n  this.currentAttr = {\n    name: attrNameFirstCh,\n    value: ''\n  };\n};\n\nTokenizer.prototype._isDuplicateAttr = function () {\n  return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;\n};\n\nTokenizer.prototype._leaveAttrName = function (toState) {\n  this.state = toState;\n  if (!this._isDuplicateAttr()) this.currentToken.attrs.push(this.currentAttr);\n};\n\nTokenizer.prototype._leaveAttrValue = function (toState) {\n  this.state = toState;\n}; //Appropriate end tag token\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#appropriate-end-tag-token)\n\n\nTokenizer.prototype._isAppropriateEndTagToken = function () {\n  return this.lastStartTagName === this.currentToken.tagName;\n}; //Token emission\n\n\nTokenizer.prototype._emitCurrentToken = function () {\n  this._emitCurrentCharacterToken(); //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n\n\n  if (this.currentToken.type === Tokenizer.START_TAG_TOKEN) this.lastStartTagName = this.currentToken.tagName;\n  this.tokenQueue.push(this.currentToken);\n  this.currentToken = null;\n};\n\nTokenizer.prototype._emitCurrentCharacterToken = function () {\n  if (this.currentCharacterToken) {\n    this.tokenQueue.push(this.currentCharacterToken);\n    this.currentCharacterToken = null;\n  }\n};\n\nTokenizer.prototype._emitEOFToken = function () {\n  this._emitCurrentCharacterToken();\n\n  this.tokenQueue.push({\n    type: Tokenizer.EOF_TOKEN\n  });\n}; //Characters emission\n//OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n//If we have a sequence of characters that belong to the same group, parser can process it\n//as a single solid character token.\n//So, there are 3 types of character tokens in parse5:\n//1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n//2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n//3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n\n\nTokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {\n  if (this.currentCharacterToken && this.currentCharacterToken.type !== type) this._emitCurrentCharacterToken();\n  if (this.currentCharacterToken) this.currentCharacterToken.chars += ch;else this._createCharacterToken(type, ch);\n};\n\nTokenizer.prototype._emitCodePoint = function (cp) {\n  var type = Tokenizer.CHARACTER_TOKEN;\n  if (isWhitespace(cp)) type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;else if (cp === $.NULL) type = Tokenizer.NULL_CHARACTER_TOKEN;\n\n  this._appendCharToCurrentCharacterToken(type, toChar(cp));\n};\n\nTokenizer.prototype._emitSeveralCodePoints = function (codePoints) {\n  for (var i = 0; i < codePoints.length; i++) this._emitCodePoint(codePoints[i]);\n}; //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n//So we can avoid additional checks here.\n\n\nTokenizer.prototype._emitChar = function (ch) {\n  this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n}; //Character reference tokenization\n\n\nTokenizer.prototype._consumeNumericEntity = function (isHex) {\n  var digits = '',\n      nextCp = void 0;\n\n  do {\n    digits += toChar(this._consume());\n    nextCp = this._lookahead();\n  } while (nextCp !== $.EOF && isDigit(nextCp, isHex));\n\n  if (this._lookahead() === $.SEMICOLON) this._consume();\n  var referencedCp = parseInt(digits, isHex ? 16 : 10),\n      replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];\n  if (replacement) return replacement;\n  if (isReservedCodePoint(referencedCp)) return $.REPLACEMENT_CHARACTER;\n  return referencedCp;\n}; // NOTE: for the details on this algorithm see\n// https://github.com/inikulin/parse5/tree/master/scripts/generate_named_entity_data/README.md\n\n\nTokenizer.prototype._consumeNamedEntity = function (inAttr) {\n  var referencedCodePoints = null,\n      referenceSize = 0,\n      cp = null,\n      consumedCount = 0,\n      semicolonTerminated = false;\n\n  for (var i = 0; i > -1;) {\n    var current = neTree[i],\n        inNode = current < MAX_BRANCH_MARKER_VALUE,\n        nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n    if (nodeWithData) {\n      referencedCodePoints = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n      referenceSize = consumedCount;\n\n      if (cp === $.SEMICOLON) {\n        semicolonTerminated = true;\n        break;\n      }\n    }\n\n    cp = this._consume();\n    consumedCount++;\n    if (cp === $.EOF) break;\n    if (inNode) i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;else i = cp === current ? ++i : -1;\n  }\n\n  if (referencedCodePoints) {\n    if (!semicolonTerminated) {\n      //NOTE: unconsume excess (e.g. 'it' in '&notit')\n      this._unconsumeSeveral(consumedCount - referenceSize); //NOTE: If the character reference is being consumed as part of an attribute and the next character\n      //is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical\n      //reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be\n      //unconsumed, and nothing is returned.\n      //However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a\n      //parse error, because some legacy user agents will misinterpret the markup in those cases.\n      //(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references)\n\n\n      if (inAttr) {\n        var nextCp = this._lookahead();\n\n        if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {\n          this._unconsumeSeveral(referenceSize);\n\n          return null;\n        }\n      }\n    }\n\n    return referencedCodePoints;\n  }\n\n  this._unconsumeSeveral(consumedCount);\n\n  return null;\n};\n\nTokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {\n  if (isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN || startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {\n    //NOTE: not a character reference. No characters are consumed, and nothing is returned.\n    this._unconsume();\n\n    return null;\n  }\n\n  if (startCp === $.NUMBER_SIGN) {\n    //NOTE: we have a numeric entity candidate, now we should determine if it's hex or decimal\n    var isHex = false,\n        nextCp = this._lookahead();\n\n    if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {\n      this._consume();\n\n      isHex = true;\n    }\n\n    nextCp = this._lookahead(); //NOTE: if we have at least one digit this is a numeric entity for sure, so we consume it\n\n    if (nextCp !== $.EOF && isDigit(nextCp, isHex)) return [this._consumeNumericEntity(isHex)]; //NOTE: otherwise this is a bogus number entity and a parse error. Unconsume the number sign\n    //and the 'x'-character if appropriate.\n\n    this._unconsumeSeveral(isHex ? 2 : 1);\n\n    return null;\n  }\n\n  this._unconsume();\n\n  return this._consumeNamedEntity(inAttr);\n}; //State machine\n\n\nvar _ = Tokenizer.prototype; //12.2.4.1 Data state\n//------------------------------------------------------------------\n\n_[DATA_STATE] = function dataState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.AMPERSAND) this.state = CHARACTER_REFERENCE_IN_DATA_STATE;else if (cp === $.LESS_THAN_SIGN) this.state = TAG_OPEN_STATE;else if (cp === $.NULL) this._emitCodePoint(cp);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n}; //12.2.4.2 Character reference in data state\n//------------------------------------------------------------------\n\n\n_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {\n  this.additionalAllowedCp = void 0;\n\n  var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n  if (!this._ensureHibernation()) {\n    if (referencedCodePoints) this._emitSeveralCodePoints(referencedCodePoints);else this._emitChar('&');\n    this.state = DATA_STATE;\n  }\n}; //12.2.4.3 RCDATA state\n//------------------------------------------------------------------\n\n\n_[RCDATA_STATE] = function rcdataState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.AMPERSAND) this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;else if (cp === $.LESS_THAN_SIGN) this.state = RCDATA_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n}; //12.2.4.4 Character reference in RCDATA state\n//------------------------------------------------------------------\n\n\n_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {\n  this.additionalAllowedCp = void 0;\n\n  var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n  if (!this._ensureHibernation()) {\n    if (referencedCodePoints) this._emitSeveralCodePoints(referencedCodePoints);else this._emitChar('&');\n    this.state = RCDATA_STATE;\n  }\n}; //12.2.4.5 RAWTEXT state\n//------------------------------------------------------------------\n\n\n_[RAWTEXT_STATE] = function rawtextState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.LESS_THAN_SIGN) this.state = RAWTEXT_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n}; //12.2.4.6 Script data state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n}; //12.2.4.7 PLAINTEXT state\n//------------------------------------------------------------------\n\n\n_[PLAINTEXT_STATE] = function plaintextState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n}; //12.2.4.8 Tag open state\n//------------------------------------------------------------------\n\n\n_[TAG_OPEN_STATE] = function tagOpenState(cp) {\n  if (cp === $.EXCLAMATION_MARK) this.state = MARKUP_DECLARATION_OPEN_STATE;else if (cp === $.SOLIDUS) this.state = END_TAG_OPEN_STATE;else if (isAsciiLetter(cp)) {\n    this._createStartTagToken();\n\n    this._reconsumeInState(TAG_NAME_STATE);\n  } else if (cp === $.QUESTION_MARK) this._reconsumeInState(BOGUS_COMMENT_STATE);else {\n    this._emitChar('<');\n\n    this._reconsumeInState(DATA_STATE);\n  }\n}; //12.2.4.9 End tag open state\n//------------------------------------------------------------------\n\n\n_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n\n    this._reconsumeInState(TAG_NAME_STATE);\n  } else if (cp === $.GREATER_THAN_SIGN) this.state = DATA_STATE;else if (cp === $.EOF) {\n    this._reconsumeInState(DATA_STATE);\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n  } else this._reconsumeInState(BOGUS_COMMENT_STATE);\n}; //12.2.4.10 Tag name state\n//------------------------------------------------------------------\n\n\n_[TAG_NAME_STATE] = function tagNameState(cp) {\n  if (isWhitespace(cp)) this.state = BEFORE_ATTRIBUTE_NAME_STATE;else if (cp === $.SOLIDUS) this.state = SELF_CLOSING_START_TAG_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (isAsciiUpper(cp)) this.currentToken.tagName += toAsciiLowerChar(cp);else if (cp === $.NULL) this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentToken.tagName += toChar(cp);\n}; //12.2.4.11 RCDATA less-than sign state\n//------------------------------------------------------------------\n\n\n_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = RCDATA_END_TAG_OPEN_STATE;\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(RCDATA_STATE);\n  }\n}; //12.2.4.12 RCDATA end tag open state\n//------------------------------------------------------------------\n\n\n_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n\n    this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(RCDATA_STATE);\n  }\n}; //12.2.4.13 RCDATA end tag name state\n//------------------------------------------------------------------\n\n\n_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n\n      if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n\n        this._emitCurrentToken();\n\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(RCDATA_STATE);\n  }\n}; //12.2.4.14 RAWTEXT less-than sign state\n//------------------------------------------------------------------\n\n\n_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = RAWTEXT_END_TAG_OPEN_STATE;\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n}; //12.2.4.15 RAWTEXT end tag open state\n//------------------------------------------------------------------\n\n\n_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n\n    this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n}; //12.2.4.16 RAWTEXT end tag name state\n//------------------------------------------------------------------\n\n\n_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n\n      if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n}; //12.2.4.17 Script data less-than sign state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n  } else if (cp === $.EXCLAMATION_MARK) {\n    this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n\n    this._emitChar('<');\n\n    this._emitChar('!');\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n}; //12.2.4.18 Script data end tag open state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n\n    this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n}; //12.2.4.19 Script data end tag name state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      } else if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      } else if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n}; //12.2.4.20 Script data escape start state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n\n    this._emitChar('-');\n  } else this._reconsumeInState(SCRIPT_DATA_STATE);\n}; //12.2.4.21 Script data escape start dash state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n\n    this._emitChar('-');\n  } else this._reconsumeInState(SCRIPT_DATA_STATE);\n}; //12.2.4.22 Script data escaped state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._emitCodePoint(cp);\n}; //12.2.4.23 Script data escaped dash state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n}; //12.2.4.24 Script data escaped dash dash state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this._emitChar('-');else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = SCRIPT_DATA_STATE;\n\n    this._emitChar('>');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n}; //12.2.4.25 Script data escaped less-than sign state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n  } else if (isAsciiLetter(cp)) {\n    this.tempBuff = [];\n\n    this._emitChar('<');\n\n    this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n}; //12.2.4.26 Script data escaped end tag open state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n}; //12.2.4.27 Script data escaped end tag name state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n\n      if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n}; //12.2.4.28 Script data double escape start state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n    this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiUpper(cp)) {\n    this.tempBuff.push(toAsciiLowerCodePoint(cp));\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiLower(cp)) {\n    this.tempBuff.push(cp);\n\n    this._emitCodePoint(cp);\n  } else this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n}; //12.2.4.29 Script data double escaped state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    this._emitChar('<');\n  } else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._emitCodePoint(cp);\n}; //12.2.4.30 Script data double escaped dash state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    this._emitChar('<');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n}; //12.2.4.31 Script data double escaped dash dash state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this._emitChar('-');else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    this._emitChar('<');\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = SCRIPT_DATA_STATE;\n\n    this._emitChar('>');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n}; //12.2.4.32 Script data double escaped less-than sign state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n\n    this._emitChar('/');\n  } else this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n}; //12.2.4.33 Script data double escape end state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n    this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiUpper(cp)) {\n    this.tempBuff.push(toAsciiLowerCodePoint(cp));\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiLower(cp)) {\n    this.tempBuff.push(cp);\n\n    this._emitCodePoint(cp);\n  } else this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n}; //12.2.4.34 Before attribute name state\n//------------------------------------------------------------------\n\n\n_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);else if (cp === $.EQUALS_SIGN) {\n    this._createAttr('=');\n\n    this.state = ATTRIBUTE_NAME_STATE;\n  } else {\n    this._createAttr('');\n\n    this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n  }\n}; //12.2.4.35 Attribute name state\n//------------------------------------------------------------------\n\n\n_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n    this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n\n    this._unconsume();\n  } else if (cp === $.EQUALS_SIGN) this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);else if (isAsciiUpper(cp)) this.currentAttr.name += toAsciiLowerChar(cp);else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) this.currentAttr.name += toChar(cp);else if (cp === $.NULL) this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;else this.currentAttr.name += toChar(cp);\n}; //12.2.4.36 After attribute name state\n//------------------------------------------------------------------\n\n\n_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.SOLIDUS) this.state = SELF_CLOSING_START_TAG_STATE;else if (cp === $.EQUALS_SIGN) this.state = BEFORE_ATTRIBUTE_VALUE_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this._createAttr('');\n\n    this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n  }\n}; //12.2.4.37 Before attribute value state\n//------------------------------------------------------------------\n\n\n_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.QUOTATION_MARK) this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;else if (cp === $.APOSTROPHE) this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;else this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n}; //12.2.4.38 Attribute value (double-quoted) state\n//------------------------------------------------------------------\n\n\n_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.QUOTATION_MARK;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n}; //12.2.4.39 Attribute value (single-quoted) state\n//------------------------------------------------------------------\n\n\n_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.APOSTROPHE;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n}; //12.2.4.40 Attribute value (unquoted) state\n//------------------------------------------------------------------\n\n\n_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {\n  if (isWhitespace(cp)) this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.GREATER_THAN_SIGN;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this._leaveAttrValue(DATA_STATE);\n\n    this._emitCurrentToken();\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT) this.currentAttr.value += toChar(cp);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n}; //12.2.4.41 Character reference in attribute value state\n//------------------------------------------------------------------\n\n\n_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {\n  var referencedCodePoints = this._consumeCharacterReference(cp, true);\n\n  if (!this._ensureHibernation()) {\n    if (referencedCodePoints) {\n      for (var i = 0; i < referencedCodePoints.length; i++) this.currentAttr.value += toChar(referencedCodePoints[i]);\n    } else this.currentAttr.value += '&';\n\n    this.state = this.returnState;\n  }\n}; //12.2.4.42 After attribute value (quoted) state\n//------------------------------------------------------------------\n\n\n_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {\n  if (isWhitespace(cp)) this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);else if (cp === $.SOLIDUS) this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);else if (cp === $.GREATER_THAN_SIGN) {\n    this._leaveAttrValue(DATA_STATE);\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n}; //12.2.4.43 Self-closing start tag state\n//------------------------------------------------------------------\n\n\n_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.selfClosing = true;\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n}; //12.2.4.44 Bogus comment state\n//------------------------------------------------------------------\n\n\n_[BOGUS_COMMENT_STATE] = function bogusCommentState() {\n  this._createCommentToken();\n\n  this._reconsumeInState(BOGUS_COMMENT_STATE_CONTINUATION);\n}; //HACK: to support streaming and make BOGUS_COMMENT_STATE reentrant we've\n//introduced BOGUS_COMMENT_STATE_CONTINUATION state which will not produce\n//comment token on each call.\n\n\n_[BOGUS_COMMENT_STATE_CONTINUATION] = function bogusCommentStateContinuation(cp) {\n  while (true) {\n    if (cp === $.GREATER_THAN_SIGN) {\n      this.state = DATA_STATE;\n      break;\n    } else if (cp === $.EOF) {\n      this._reconsumeInState(DATA_STATE);\n\n      break;\n    } else {\n      this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);\n\n      this._hibernationSnapshot();\n\n      cp = this._consume();\n      if (this._ensureHibernation()) return;\n    }\n  }\n\n  this._emitCurrentToken();\n}; //12.2.4.45 Markup declaration open state\n//------------------------------------------------------------------\n\n\n_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {\n  var dashDashMatch = this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true),\n      doctypeMatch = !dashDashMatch && this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false),\n      cdataMatch = !dashDashMatch && !doctypeMatch && this.allowCDATA && this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true);\n\n  if (!this._ensureHibernation()) {\n    if (dashDashMatch) {\n      this._createCommentToken();\n\n      this.state = COMMENT_START_STATE;\n    } else if (doctypeMatch) this.state = DOCTYPE_STATE;else if (cdataMatch) this.state = CDATA_SECTION_STATE;else this._reconsumeInState(BOGUS_COMMENT_STATE);\n  }\n}; //12.2.4.46 Comment start state\n//------------------------------------------------------------------\n\n\n_[COMMENT_START_STATE] = function commentStartState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_START_DASH_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n}; //12.2.4.47 Comment start dash state\n//------------------------------------------------------------------\n\n\n_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += '-';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '-';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n}; //12.2.4.48 Comment state\n//------------------------------------------------------------------\n\n\n_[COMMENT_STATE] = function commentState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_DASH_STATE;else if (cp === $.NULL) this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.data += toChar(cp);\n}; //12.2.4.49 Comment end dash state\n//------------------------------------------------------------------\n\n\n_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += '-';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '-';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n}; //12.2.4.50 Comment end state\n//------------------------------------------------------------------\n\n\n_[COMMENT_END_STATE] = function commentEndState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EXCLAMATION_MARK) this.state = COMMENT_END_BANG_STATE;else if (cp === $.HYPHEN_MINUS) this.currentToken.data += '-';else if (cp === $.NULL) {\n    this.currentToken.data += '--';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._reconsumeInState(DATA_STATE);\n\n    this._emitCurrentToken();\n  } else {\n    this.currentToken.data += '--';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n}; //12.2.4.51 Comment end bang state\n//------------------------------------------------------------------\n\n\n_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.currentToken.data += '--!';\n    this.state = COMMENT_END_DASH_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.NULL) {\n    this.currentToken.data += '--!';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '--!';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n}; //12.2.4.52 DOCTYPE state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_STATE] = function doctypeState(cp) {\n  if (isWhitespace(cp)) return;else if (cp === $.GREATER_THAN_SIGN) {\n    this._createDoctypeToken(null);\n\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this._createDoctypeToken(null);\n\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this._createDoctypeToken('');\n\n    this._reconsumeInState(DOCTYPE_NAME_STATE);\n  }\n}; //12.2.4.54 DOCTYPE name state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {\n  if (isWhitespace(cp) || cp === $.GREATER_THAN_SIGN || cp === $.EOF) this._reconsumeInState(AFTER_DOCTYPE_NAME_STATE);else if (isAsciiUpper(cp)) this.currentToken.name += toAsciiLowerChar(cp);else if (cp === $.NULL) this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;else this.currentToken.name += toChar(cp);\n}; //12.2.4.55 After DOCTYPE name state\n//------------------------------------------------------------------\n\n\n_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else {\n    var publicMatch = this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false),\n        systemMatch = !publicMatch && this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false);\n\n    if (!this._ensureHibernation()) {\n      if (publicMatch) this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;else if (systemMatch) this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else {\n        this.currentToken.forceQuirks = true;\n        this.state = BOGUS_DOCTYPE_STATE;\n      }\n    }\n  }\n}; //12.2.4.57 Before DOCTYPE public identifier state\n//------------------------------------------------------------------\n\n\n_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.QUOTATION_MARK) {\n    this.currentToken.publicId = '';\n    this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.publicId = '';\n    this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else {\n    this.currentToken.forceQuirks = true;\n\n    this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n  }\n}; //12.2.4.58 DOCTYPE public identifier (double-quoted) state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;else if (cp === $.NULL) this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.publicId += toChar(cp);\n}; //12.2.4.59 DOCTYPE public identifier (single-quoted) state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;else if (cp === $.NULL) this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.publicId += toChar(cp);\n}; //12.2.4.61 Between DOCTYPE public and system identifiers state\n//------------------------------------------------------------------\n\n\n_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.QUOTATION_MARK) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else {\n    this.currentToken.forceQuirks = true;\n\n    this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n  }\n}; //12.2.4.63 Before DOCTYPE system identifier state\n//------------------------------------------------------------------\n\n\n_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.QUOTATION_MARK) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else {\n    this.currentToken.forceQuirks = true;\n\n    this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n  }\n}; //12.2.4.64 DOCTYPE system identifier (double-quoted) state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.NULL) this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.systemId += toChar(cp);\n}; //12.2.4.65 DOCTYPE system identifier (single-quoted) state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.NULL) this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.systemId += toChar(cp);\n}; //12.2.4.66 After DOCTYPE system identifier state\n//------------------------------------------------------------------\n\n\n_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.state = BOGUS_DOCTYPE_STATE;\n}; //12.2.4.67 Bogus DOCTYPE state\n//------------------------------------------------------------------\n\n\n_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  }\n}; //12.2.4.68 CDATA section state\n//------------------------------------------------------------------\n\n\n_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {\n  while (true) {\n    if (cp === $.EOF) {\n      this._reconsumeInState(DATA_STATE);\n\n      break;\n    } else {\n      var cdataEndMatch = this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true);\n\n      if (this._ensureHibernation()) break;\n\n      if (cdataEndMatch) {\n        this.state = DATA_STATE;\n        break;\n      }\n\n      this._emitCodePoint(cp);\n\n      this._hibernationSnapshot();\n\n      cp = this._consume();\n      if (this._ensureHibernation()) break;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/lambda_school_loaner_244/Desktop/LAMBDA/projects/projectsCollection/node_modules/parse5/lib/tokenizer/index.js"],"names":["Preprocessor","require","UNICODE","neTree","$","CODE_POINTS","$$","CODE_POINT_SEQUENCES","NUMERIC_ENTITY_REPLACEMENTS","HAS_DATA_FLAG","DATA_DUPLET_FLAG","HAS_BRANCHES_FLAG","MAX_BRANCH_MARKER_VALUE","DATA_STATE","CHARACTER_REFERENCE_IN_DATA_STATE","RCDATA_STATE","CHARACTER_REFERENCE_IN_RCDATA_STATE","RAWTEXT_STATE","SCRIPT_DATA_STATE","PLAINTEXT_STATE","TAG_OPEN_STATE","END_TAG_OPEN_STATE","TAG_NAME_STATE","RCDATA_LESS_THAN_SIGN_STATE","RCDATA_END_TAG_OPEN_STATE","RCDATA_END_TAG_NAME_STATE","RAWTEXT_LESS_THAN_SIGN_STATE","RAWTEXT_END_TAG_OPEN_STATE","RAWTEXT_END_TAG_NAME_STATE","SCRIPT_DATA_LESS_THAN_SIGN_STATE","SCRIPT_DATA_END_TAG_OPEN_STATE","SCRIPT_DATA_END_TAG_NAME_STATE","SCRIPT_DATA_ESCAPE_START_STATE","SCRIPT_DATA_ESCAPE_START_DASH_STATE","SCRIPT_DATA_ESCAPED_STATE","SCRIPT_DATA_ESCAPED_DASH_STATE","SCRIPT_DATA_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE","BEFORE_ATTRIBUTE_NAME_STATE","ATTRIBUTE_NAME_STATE","AFTER_ATTRIBUTE_NAME_STATE","BEFORE_ATTRIBUTE_VALUE_STATE","ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE","ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE","ATTRIBUTE_VALUE_UNQUOTED_STATE","CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE","AFTER_ATTRIBUTE_VALUE_QUOTED_STATE","SELF_CLOSING_START_TAG_STATE","BOGUS_COMMENT_STATE","BOGUS_COMMENT_STATE_CONTINUATION","MARKUP_DECLARATION_OPEN_STATE","COMMENT_START_STATE","COMMENT_START_DASH_STATE","COMMENT_STATE","COMMENT_END_DASH_STATE","COMMENT_END_STATE","COMMENT_END_BANG_STATE","DOCTYPE_STATE","DOCTYPE_NAME_STATE","AFTER_DOCTYPE_NAME_STATE","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE","AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE","BOGUS_DOCTYPE_STATE","CDATA_SECTION_STATE","isWhitespace","cp","SPACE","LINE_FEED","TABULATION","FORM_FEED","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLower","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLetter","isAsciiAlphaNumeric","isDigit","isHex","LATIN_CAPITAL_F","LATIN_SMALL_F","isReservedCodePoint","toAsciiLowerCodePoint","toChar","String","fromCharCode","toAsciiLowerChar","findNamedEntityTreeBranch","nodeIx","branchCount","lo","hi","mid","midCp","Tokenizer","module","exports","preprocessor","tokenQueue","allowCDATA","state","returnState","tempBuff","additionalAllowedCp","lastStartTagName","consumedAfterSnapshot","active","currentCharacterToken","currentToken","currentAttr","CHARACTER_TOKEN","NULL_CHARACTER_TOKEN","WHITESPACE_CHARACTER_TOKEN","START_TAG_TOKEN","END_TAG_TOKEN","COMMENT_TOKEN","DOCTYPE_TOKEN","EOF_TOKEN","HIBERNATION_TOKEN","MODE","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","PLAINTEXT","getTokenAttr","token","attrName","i","attrs","length","name","value","prototype","getNextToken","_hibernationSnapshot","_consume","_ensureHibernation","shift","write","chunk","isLastChunk","insertHtmlAtCurrentPos","endOfChunkHit","retreat","push","type","advance","_unconsume","_unconsumeSeveral","count","_reconsumeInState","_consumeSubsequentIfMatch","pattern","startCp","caseSensitive","consumedCount","isMatch","patternLength","patternPos","patternCp","EOF","_lookahead","isTempBufferEqualToScriptString","SCRIPT_STRING","_createStartTagToken","tagName","selfClosing","_createEndTagToken","_createCommentToken","data","_createDoctypeToken","initialName","forceQuirks","publicId","systemId","_createCharacterToken","ch","chars","_createAttr","attrNameFirstCh","_isDuplicateAttr","_leaveAttrName","toState","_leaveAttrValue","_isAppropriateEndTagToken","_emitCurrentToken","_emitCurrentCharacterToken","_emitEOFToken","_appendCharToCurrentCharacterToken","_emitCodePoint","NULL","_emitSeveralCodePoints","codePoints","_emitChar","_consumeNumericEntity","digits","nextCp","SEMICOLON","referencedCp","parseInt","replacement","REPLACEMENT_CHARACTER","_consumeNamedEntity","inAttr","referencedCodePoints","referenceSize","semicolonTerminated","current","inNode","nodeWithData","EQUALS_SIGN","_consumeCharacterReference","GREATER_THAN_SIGN","AMPERSAND","NUMBER_SIGN","LATIN_SMALL_X","LATIN_CAPITAL_X","_","dataState","dropParsedChunk","LESS_THAN_SIGN","characterReferenceInDataState","rcdataState","characterReferenceInRcdataState","rawtextState","scriptDataState","plaintextState","tagOpenState","EXCLAMATION_MARK","SOLIDUS","QUESTION_MARK","endTagOpenState","tagNameState","rcdataLessThanSignState","rcdataEndTagOpenState","rcdataEndTagNameState","rawtextLessThanSignState","rawtextEndTagOpenState","rawtextEndTagNameState","scriptDataLessThanSignState","scriptDataEndTagOpenState","scriptDataEndTagNameState","scriptDataEscapeStartState","HYPHEN_MINUS","scriptDataEscapeStartDashState","scriptDataEscapedState","scriptDataEscapedDashState","scriptDataEscapedDashDashState","scriptDataEscapedLessThanSignState","scriptDataEscapedEndTagOpenState","scriptDataEscapedEndTagNameState","scriptDataDoubleEscapeStartState","scriptDataDoubleEscapedState","scriptDataDoubleEscapedDashState","scriptDataDoubleEscapedDashDashState","scriptDataDoubleEscapedLessThanSignState","scriptDataDoubleEscapeEndState","beforeAttributeNameState","attributeNameState","QUOTATION_MARK","APOSTROPHE","afterAttributeNameState","beforeAttributeValueState","attributeValueDoubleQuotedState","attributeValueSingleQuotedState","attributeValueUnquotedState","GRAVE_ACCENT","characterReferenceInAttributeValueState","afterAttributeValueQuotedState","selfClosingStartTagState","bogusCommentState","bogusCommentStateContinuation","markupDeclarationOpenState","dashDashMatch","DASH_DASH_STRING","doctypeMatch","DOCTYPE_STRING","cdataMatch","CDATA_START_STRING","commentStartState","commentStartDashState","commentState","commentEndDashState","commentEndState","commentEndBangState","doctypeState","doctypeNameState","afterDoctypeNameState","publicMatch","PUBLIC_STRING","systemMatch","SYSTEM_STRING","beforeDoctypePublicIdentifierState","doctypePublicIdentifierDoubleQuotedState","doctypePublicIdentifierSingleQuotedState","betweenDoctypePublicAndSystemIdentifiersState","beforeDoctypeSystemIdentifierState","doctypeSystemIdentifierDoubleQuotedState","doctypeSystemIdentifierSingleQuotedState","afterDoctypeSystemIdentifierState","bogusDoctypeState","cdataSectionState","cdataEndMatch","CDATA_END_STRING"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Preprocessor = require('./preprocessor'),\n    UNICODE = require('../common/unicode'),\n    neTree = require('./named_entity_data');\n\n//Aliases\nvar $ = UNICODE.CODE_POINTS,\n    $$ = UNICODE.CODE_POINT_SEQUENCES;\n\n//Replacement code points for numeric entities\nvar NUMERIC_ENTITY_REPLACEMENTS = {\n    0x00: 0xFFFD, 0x0D: 0x000D, 0x80: 0x20AC, 0x81: 0x0081, 0x82: 0x201A, 0x83: 0x0192, 0x84: 0x201E,\n    0x85: 0x2026, 0x86: 0x2020, 0x87: 0x2021, 0x88: 0x02C6, 0x89: 0x2030, 0x8A: 0x0160, 0x8B: 0x2039,\n    0x8C: 0x0152, 0x8D: 0x008D, 0x8E: 0x017D, 0x8F: 0x008F, 0x90: 0x0090, 0x91: 0x2018, 0x92: 0x2019,\n    0x93: 0x201C, 0x94: 0x201D, 0x95: 0x2022, 0x96: 0x2013, 0x97: 0x2014, 0x98: 0x02DC, 0x99: 0x2122,\n    0x9A: 0x0161, 0x9B: 0x203A, 0x9C: 0x0153, 0x9D: 0x009D, 0x9E: 0x017E, 0x9F: 0x0178\n};\n\n// Named entity tree flags\nvar HAS_DATA_FLAG = 1 << 0;\nvar DATA_DUPLET_FLAG = 1 << 1;\nvar HAS_BRANCHES_FLAG = 1 << 2;\nvar MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\n\n\n//States\nvar DATA_STATE = 'DATA_STATE',\n    CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',\n    RCDATA_STATE = 'RCDATA_STATE',\n    CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',\n    RAWTEXT_STATE = 'RAWTEXT_STATE',\n    SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',\n    PLAINTEXT_STATE = 'PLAINTEXT_STATE',\n    TAG_OPEN_STATE = 'TAG_OPEN_STATE',\n    END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',\n    TAG_NAME_STATE = 'TAG_NAME_STATE',\n    RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',\n    RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',\n    RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',\n    RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',\n    RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',\n    RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',\n    SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',\n    SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',\n    SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',\n    BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',\n    ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',\n    AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',\n    BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',\n    ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',\n    CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',\n    AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',\n    SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',\n    BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',\n    BOGUS_COMMENT_STATE_CONTINUATION = 'BOGUS_COMMENT_STATE_CONTINUATION',\n    MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',\n    COMMENT_START_STATE = 'COMMENT_START_STATE',\n    COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',\n    COMMENT_STATE = 'COMMENT_STATE',\n    COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',\n    COMMENT_END_STATE = 'COMMENT_END_STATE',\n    COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',\n    DOCTYPE_STATE = 'DOCTYPE_STATE',\n    DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',\n    AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',\n    BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',\n    BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',\n    BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',\n    AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',\n    CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isDigit(cp, isHex) {\n    return isAsciiDigit(cp) || isHex && (cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F ||\n                                         cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F);\n}\n\nfunction isReservedCodePoint(cp) {\n    return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n    return cp + 0x0020;\n}\n\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\nfunction toChar(cp) {\n    if (cp <= 0xFFFF)\n        return String.fromCharCode(cp);\n\n    cp -= 0x10000;\n    return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);\n}\n\nfunction toAsciiLowerChar(cp) {\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n    var branchCount = neTree[++nodeIx],\n        lo = ++nodeIx,\n        hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        var mid = lo + hi >>> 1,\n            midCp = neTree[mid];\n\n        if (midCp < cp)\n            lo = mid + 1;\n\n        else if (midCp > cp)\n            hi = mid - 1;\n\n        else\n            return neTree[mid + branchCount];\n    }\n\n    return -1;\n}\n\n\n//Tokenizer\nvar Tokenizer = module.exports = function () {\n    this.preprocessor = new Preprocessor();\n\n    this.tokenQueue = [];\n\n    this.allowCDATA = false;\n\n    this.state = DATA_STATE;\n    this.returnState = '';\n\n    this.tempBuff = [];\n    this.additionalAllowedCp = void 0;\n    this.lastStartTagName = '';\n\n    this.consumedAfterSnapshot = -1;\n    this.active = false;\n\n    this.currentCharacterToken = null;\n    this.currentToken = null;\n    this.currentAttr = null;\n};\n\n//Token types\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\n\n//Tokenizer initial states for different modes\nTokenizer.MODE = {\n    DATA: DATA_STATE,\n    RCDATA: RCDATA_STATE,\n    RAWTEXT: RAWTEXT_STATE,\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\n    PLAINTEXT: PLAINTEXT_STATE\n};\n\n//Static\nTokenizer.getTokenAttr = function (token, attrName) {\n    for (var i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName)\n            return token.attrs[i].value;\n    }\n\n    return null;\n};\n\n//API\nTokenizer.prototype.getNextToken = function () {\n    while (!this.tokenQueue.length && this.active) {\n        this._hibernationSnapshot();\n\n        var cp = this._consume();\n\n        if (!this._ensureHibernation())\n            this[this.state](cp);\n    }\n\n    return this.tokenQueue.shift();\n};\n\nTokenizer.prototype.write = function (chunk, isLastChunk) {\n    this.active = true;\n    this.preprocessor.write(chunk, isLastChunk);\n};\n\nTokenizer.prototype.insertHtmlAtCurrentPos = function (chunk) {\n    this.active = true;\n    this.preprocessor.insertHtmlAtCurrentPos(chunk);\n};\n\n//Hibernation\nTokenizer.prototype._hibernationSnapshot = function () {\n    this.consumedAfterSnapshot = 0;\n};\n\nTokenizer.prototype._ensureHibernation = function () {\n    if (this.preprocessor.endOfChunkHit) {\n        for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--)\n            this.preprocessor.retreat();\n\n        this.active = false;\n        this.tokenQueue.push({type: Tokenizer.HIBERNATION_TOKEN});\n\n        return true;\n    }\n\n    return false;\n};\n\n\n//Consumption\nTokenizer.prototype._consume = function () {\n    this.consumedAfterSnapshot++;\n    return this.preprocessor.advance();\n};\n\nTokenizer.prototype._unconsume = function () {\n    this.consumedAfterSnapshot--;\n    this.preprocessor.retreat();\n};\n\nTokenizer.prototype._unconsumeSeveral = function (count) {\n    while (count--)\n        this._unconsume();\n};\n\nTokenizer.prototype._reconsumeInState = function (state) {\n    this.state = state;\n    this._unconsume();\n};\n\nTokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {\n    var consumedCount = 0,\n        isMatch = true,\n        patternLength = pattern.length,\n        patternPos = 0,\n        cp = startCp,\n        patternCp = void 0;\n\n    for (; patternPos < patternLength; patternPos++) {\n        if (patternPos > 0) {\n            cp = this._consume();\n            consumedCount++;\n        }\n\n        if (cp === $.EOF) {\n            isMatch = false;\n            break;\n        }\n\n        patternCp = pattern[patternPos];\n\n        if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n            isMatch = false;\n            break;\n        }\n    }\n\n    if (!isMatch)\n        this._unconsumeSeveral(consumedCount);\n\n    return isMatch;\n};\n\n//Lookahead\nTokenizer.prototype._lookahead = function () {\n    var cp = this._consume();\n\n    this._unconsume();\n\n    return cp;\n};\n\n//Temp buffer\nTokenizer.prototype.isTempBufferEqualToScriptString = function () {\n    if (this.tempBuff.length !== $$.SCRIPT_STRING.length)\n        return false;\n\n    for (var i = 0; i < this.tempBuff.length; i++) {\n        if (this.tempBuff[i] !== $$.SCRIPT_STRING[i])\n            return false;\n    }\n\n    return true;\n};\n\n//Token creation\nTokenizer.prototype._createStartTagToken = function () {\n    this.currentToken = {\n        type: Tokenizer.START_TAG_TOKEN,\n        tagName: '',\n        selfClosing: false,\n        attrs: []\n    };\n};\n\nTokenizer.prototype._createEndTagToken = function () {\n    this.currentToken = {\n        type: Tokenizer.END_TAG_TOKEN,\n        tagName: '',\n        attrs: []\n    };\n};\n\nTokenizer.prototype._createCommentToken = function () {\n    this.currentToken = {\n        type: Tokenizer.COMMENT_TOKEN,\n        data: ''\n    };\n};\n\nTokenizer.prototype._createDoctypeToken = function (initialName) {\n    this.currentToken = {\n        type: Tokenizer.DOCTYPE_TOKEN,\n        name: initialName,\n        forceQuirks: false,\n        publicId: null,\n        systemId: null\n    };\n};\n\nTokenizer.prototype._createCharacterToken = function (type, ch) {\n    this.currentCharacterToken = {\n        type: type,\n        chars: ch\n    };\n};\n\n//Tag attributes\nTokenizer.prototype._createAttr = function (attrNameFirstCh) {\n    this.currentAttr = {\n        name: attrNameFirstCh,\n        value: ''\n    };\n};\n\nTokenizer.prototype._isDuplicateAttr = function () {\n    return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;\n};\n\nTokenizer.prototype._leaveAttrName = function (toState) {\n    this.state = toState;\n\n    if (!this._isDuplicateAttr())\n        this.currentToken.attrs.push(this.currentAttr);\n};\n\nTokenizer.prototype._leaveAttrValue = function (toState) {\n    this.state = toState;\n};\n\n//Appropriate end tag token\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#appropriate-end-tag-token)\nTokenizer.prototype._isAppropriateEndTagToken = function () {\n    return this.lastStartTagName === this.currentToken.tagName;\n};\n\n//Token emission\nTokenizer.prototype._emitCurrentToken = function () {\n    this._emitCurrentCharacterToken();\n\n    //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n    if (this.currentToken.type === Tokenizer.START_TAG_TOKEN)\n        this.lastStartTagName = this.currentToken.tagName;\n\n    this.tokenQueue.push(this.currentToken);\n    this.currentToken = null;\n};\n\nTokenizer.prototype._emitCurrentCharacterToken = function () {\n    if (this.currentCharacterToken) {\n        this.tokenQueue.push(this.currentCharacterToken);\n        this.currentCharacterToken = null;\n    }\n};\n\nTokenizer.prototype._emitEOFToken = function () {\n    this._emitCurrentCharacterToken();\n    this.tokenQueue.push({type: Tokenizer.EOF_TOKEN});\n};\n\n//Characters emission\n\n//OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n//If we have a sequence of characters that belong to the same group, parser can process it\n//as a single solid character token.\n//So, there are 3 types of character tokens in parse5:\n//1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n//2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n//3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\nTokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {\n    if (this.currentCharacterToken && this.currentCharacterToken.type !== type)\n        this._emitCurrentCharacterToken();\n\n    if (this.currentCharacterToken)\n        this.currentCharacterToken.chars += ch;\n\n    else\n        this._createCharacterToken(type, ch);\n};\n\nTokenizer.prototype._emitCodePoint = function (cp) {\n    var type = Tokenizer.CHARACTER_TOKEN;\n\n    if (isWhitespace(cp))\n        type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n\n    else if (cp === $.NULL)\n        type = Tokenizer.NULL_CHARACTER_TOKEN;\n\n    this._appendCharToCurrentCharacterToken(type, toChar(cp));\n};\n\nTokenizer.prototype._emitSeveralCodePoints = function (codePoints) {\n    for (var i = 0; i < codePoints.length; i++)\n        this._emitCodePoint(codePoints[i]);\n};\n\n//NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n//So we can avoid additional checks here.\nTokenizer.prototype._emitChar = function (ch) {\n    this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n};\n\n//Character reference tokenization\nTokenizer.prototype._consumeNumericEntity = function (isHex) {\n    var digits = '',\n        nextCp = void 0;\n\n    do {\n        digits += toChar(this._consume());\n        nextCp = this._lookahead();\n    } while (nextCp !== $.EOF && isDigit(nextCp, isHex));\n\n    if (this._lookahead() === $.SEMICOLON)\n        this._consume();\n\n    var referencedCp = parseInt(digits, isHex ? 16 : 10),\n        replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];\n\n    if (replacement)\n        return replacement;\n\n    if (isReservedCodePoint(referencedCp))\n        return $.REPLACEMENT_CHARACTER;\n\n    return referencedCp;\n};\n\n// NOTE: for the details on this algorithm see\n// https://github.com/inikulin/parse5/tree/master/scripts/generate_named_entity_data/README.md\nTokenizer.prototype._consumeNamedEntity = function (inAttr) {\n    var referencedCodePoints = null,\n        referenceSize = 0,\n        cp = null,\n        consumedCount = 0,\n        semicolonTerminated = false;\n\n    for (var i = 0; i > -1;) {\n        var current = neTree[i],\n            inNode = current < MAX_BRANCH_MARKER_VALUE,\n            nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n        if (nodeWithData) {\n            referencedCodePoints = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n            referenceSize = consumedCount;\n\n            if (cp === $.SEMICOLON) {\n                semicolonTerminated = true;\n                break;\n            }\n        }\n\n        cp = this._consume();\n        consumedCount++;\n\n        if (cp === $.EOF)\n            break;\n\n        if (inNode)\n            i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;\n\n        else\n            i = cp === current ? ++i : -1;\n    }\n\n\n    if (referencedCodePoints) {\n        if (!semicolonTerminated) {\n            //NOTE: unconsume excess (e.g. 'it' in '&notit')\n            this._unconsumeSeveral(consumedCount - referenceSize);\n\n            //NOTE: If the character reference is being consumed as part of an attribute and the next character\n            //is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical\n            //reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be\n            //unconsumed, and nothing is returned.\n            //However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a\n            //parse error, because some legacy user agents will misinterpret the markup in those cases.\n            //(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references)\n            if (inAttr) {\n                var nextCp = this._lookahead();\n\n                if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {\n                    this._unconsumeSeveral(referenceSize);\n                    return null;\n                }\n            }\n        }\n\n        return referencedCodePoints;\n    }\n\n    this._unconsumeSeveral(consumedCount);\n\n    return null;\n};\n\nTokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {\n    if (isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN ||\n        startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {\n        //NOTE: not a character reference. No characters are consumed, and nothing is returned.\n        this._unconsume();\n        return null;\n    }\n\n    if (startCp === $.NUMBER_SIGN) {\n        //NOTE: we have a numeric entity candidate, now we should determine if it's hex or decimal\n        var isHex = false,\n            nextCp = this._lookahead();\n\n        if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {\n            this._consume();\n            isHex = true;\n        }\n\n        nextCp = this._lookahead();\n\n        //NOTE: if we have at least one digit this is a numeric entity for sure, so we consume it\n        if (nextCp !== $.EOF && isDigit(nextCp, isHex))\n            return [this._consumeNumericEntity(isHex)];\n\n        //NOTE: otherwise this is a bogus number entity and a parse error. Unconsume the number sign\n        //and the 'x'-character if appropriate.\n        this._unconsumeSeveral(isHex ? 2 : 1);\n        return null;\n    }\n\n    this._unconsume();\n\n    return this._consumeNamedEntity(inAttr);\n};\n\n//State machine\nvar _ = Tokenizer.prototype;\n\n//12.2.4.1 Data state\n//------------------------------------------------------------------\n_[DATA_STATE] = function dataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.AMPERSAND)\n        this.state = CHARACTER_REFERENCE_IN_DATA_STATE;\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = TAG_OPEN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitCodePoint(cp);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.2 Character reference in data state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {\n    this.additionalAllowedCp = void 0;\n\n    var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints)\n            this._emitSeveralCodePoints(referencedCodePoints);\n\n        else\n            this._emitChar('&');\n\n        this.state = DATA_STATE;\n    }\n};\n\n\n//12.2.4.3 RCDATA state\n//------------------------------------------------------------------\n_[RCDATA_STATE] = function rcdataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.AMPERSAND)\n        this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = RCDATA_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.4 Character reference in RCDATA state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {\n    this.additionalAllowedCp = void 0;\n\n    var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints)\n            this._emitSeveralCodePoints(referencedCodePoints);\n\n        else\n            this._emitChar('&');\n\n        this.state = RCDATA_STATE;\n    }\n};\n\n\n//12.2.4.5 RAWTEXT state\n//------------------------------------------------------------------\n_[RAWTEXT_STATE] = function rawtextState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.LESS_THAN_SIGN)\n        this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.6 Script data state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.7 PLAINTEXT state\n//------------------------------------------------------------------\n_[PLAINTEXT_STATE] = function plaintextState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.8 Tag open state\n//------------------------------------------------------------------\n_[TAG_OPEN_STATE] = function tagOpenState(cp) {\n    if (cp === $.EXCLAMATION_MARK)\n        this.state = MARKUP_DECLARATION_OPEN_STATE;\n\n    else if (cp === $.SOLIDUS)\n        this.state = END_TAG_OPEN_STATE;\n\n    else if (isAsciiLetter(cp)) {\n        this._createStartTagToken();\n        this._reconsumeInState(TAG_NAME_STATE);\n    }\n\n    else if (cp === $.QUESTION_MARK)\n        this._reconsumeInState(BOGUS_COMMENT_STATE);\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(DATA_STATE);\n    }\n};\n\n\n//12.2.4.9 End tag open state\n//------------------------------------------------------------------\n_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(TAG_NAME_STATE);\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN)\n        this.state = DATA_STATE;\n\n    else if (cp === $.EOF) {\n        this._reconsumeInState(DATA_STATE);\n        this._emitChar('<');\n        this._emitChar('/');\n    }\n\n    else\n        this._reconsumeInState(BOGUS_COMMENT_STATE);\n};\n\n\n//12.2.4.10 Tag name state\n//------------------------------------------------------------------\n_[TAG_NAME_STATE] = function tagNameState(cp) {\n    if (isWhitespace(cp))\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n\n    else if (cp === $.SOLIDUS)\n        this.state = SELF_CLOSING_START_TAG_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (isAsciiUpper(cp))\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentToken.tagName += toChar(cp);\n};\n\n\n//12.2.4.11 RCDATA less-than sign state\n//------------------------------------------------------------------\n_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = RCDATA_END_TAG_OPEN_STATE;\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.12 RCDATA end tag open state\n//------------------------------------------------------------------\n_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.13 RCDATA end tag name state\n//------------------------------------------------------------------\n_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this.state = DATA_STATE;\n                this._emitCurrentToken();\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.14 RAWTEXT less-than sign state\n//------------------------------------------------------------------\n_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = RAWTEXT_END_TAG_OPEN_STATE;\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.15 RAWTEXT end tag open state\n//------------------------------------------------------------------\n_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.16 RAWTEXT end tag name state\n//------------------------------------------------------------------\n_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.17 Script data less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n    }\n\n    else if (cp === $.EXCLAMATION_MARK) {\n        this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n        this._emitChar('<');\n        this._emitChar('!');\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.18 Script data end tag open state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.19 Script data end tag name state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            else if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            else if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.20 Script data escape start state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n\n//12.2.4.21 Script data escape start dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n\n//12.2.4.22 Script data escaped state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.23 Script data escaped dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.24 Script data escaped dash dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this._emitChar('-');\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = SCRIPT_DATA_STATE;\n        this._emitChar('>');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.25 Script data escaped less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n    }\n\n    else if (isAsciiLetter(cp)) {\n        this.tempBuff = [];\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.26 Script data escaped end tag open state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.27 Script data escaped end tag name state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.28 Script data double escape start state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiUpper(cp)) {\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.tempBuff.push(cp);\n        this._emitCodePoint(cp);\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n};\n\n\n//12.2.4.29 Script data double escaped state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.30 Script data double escaped dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.31 Script data double escaped dash dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this._emitChar('-');\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = SCRIPT_DATA_STATE;\n        this._emitChar('>');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.32 Script data double escaped less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n        this._emitChar('/');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n\n//12.2.4.33 Script data double escape end state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiUpper(cp)) {\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.tempBuff.push(cp);\n        this._emitCodePoint(cp);\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n\n//12.2.4.34 Before attribute name state\n//------------------------------------------------------------------\n_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF)\n        this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.EQUALS_SIGN) {\n        this._createAttr('=');\n        this.state = ATTRIBUTE_NAME_STATE;\n    }\n\n    else {\n        this._createAttr('');\n        this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.35 Attribute name state\n//------------------------------------------------------------------\n_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n        this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n        this._unconsume();\n    }\n\n    else if (cp === $.EQUALS_SIGN)\n        this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\n\n    else if (isAsciiUpper(cp))\n        this.currentAttr.name += toAsciiLowerChar(cp);\n\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN)\n        this.currentAttr.name += toChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;\n\n    else\n        this.currentAttr.name += toChar(cp);\n};\n\n\n//12.2.4.36 After attribute name state\n//------------------------------------------------------------------\n_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.SOLIDUS)\n        this.state = SELF_CLOSING_START_TAG_STATE;\n\n    else if (cp === $.EQUALS_SIGN)\n        this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this._createAttr('');\n        this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.37 Before attribute value state\n//------------------------------------------------------------------\n_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK)\n        this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n\n    else if (cp === $.APOSTROPHE)\n        this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n\n    else\n        this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n};\n\n\n//12.2.4.38 Attribute value (double-quoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.QUOTATION_MARK;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.39 Attribute value (single-quoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.APOSTROPHE;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.40 Attribute value (unquoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {\n    if (isWhitespace(cp))\n        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.GREATER_THAN_SIGN;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._leaveAttrValue(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN ||\n             cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT)\n        this.currentAttr.value += toChar(cp);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.41 Character reference in attribute value state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {\n    var referencedCodePoints = this._consumeCharacterReference(cp, true);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints) {\n            for (var i = 0; i < referencedCodePoints.length; i++)\n                this.currentAttr.value += toChar(referencedCodePoints[i]);\n        }\n        else\n            this.currentAttr.value += '&';\n\n        this.state = this.returnState;\n    }\n};\n\n\n//12.2.4.42 After attribute value (quoted) state\n//------------------------------------------------------------------\n_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {\n    if (isWhitespace(cp))\n        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.SOLIDUS)\n        this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._leaveAttrValue(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n\n//12.2.4.43 Self-closing start tag state\n//------------------------------------------------------------------\n_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.selfClosing = true;\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n\n//12.2.4.44 Bogus comment state\n//------------------------------------------------------------------\n_[BOGUS_COMMENT_STATE] = function bogusCommentState() {\n    this._createCommentToken();\n    this._reconsumeInState(BOGUS_COMMENT_STATE_CONTINUATION);\n};\n\n//HACK: to support streaming and make BOGUS_COMMENT_STATE reentrant we've\n//introduced BOGUS_COMMENT_STATE_CONTINUATION state which will not produce\n//comment token on each call.\n_[BOGUS_COMMENT_STATE_CONTINUATION] = function bogusCommentStateContinuation(cp) {\n    while (true) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            break;\n        }\n\n        else if (cp === $.EOF) {\n            this._reconsumeInState(DATA_STATE);\n            break;\n        }\n\n        else {\n            this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);\n\n            this._hibernationSnapshot();\n            cp = this._consume();\n\n            if (this._ensureHibernation())\n                return;\n        }\n    }\n\n    this._emitCurrentToken();\n};\n\n//12.2.4.45 Markup declaration open state\n//------------------------------------------------------------------\n_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {\n    var dashDashMatch = this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true),\n        doctypeMatch = !dashDashMatch && this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false),\n        cdataMatch = !dashDashMatch && !doctypeMatch &&\n                     this.allowCDATA &&\n                     this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true);\n\n    if (!this._ensureHibernation()) {\n        if (dashDashMatch) {\n            this._createCommentToken();\n            this.state = COMMENT_START_STATE;\n        }\n\n        else if (doctypeMatch)\n            this.state = DOCTYPE_STATE;\n\n        else if (cdataMatch)\n            this.state = CDATA_SECTION_STATE;\n\n        else\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n    }\n};\n\n\n//12.2.4.46 Comment start state\n//------------------------------------------------------------------\n_[COMMENT_START_STATE] = function commentStartState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_START_DASH_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.47 Comment start dash state\n//------------------------------------------------------------------\n_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '-';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '-';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.48 Comment state\n//------------------------------------------------------------------\n_[COMMENT_STATE] = function commentState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_DASH_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.data += toChar(cp);\n};\n\n\n//12.2.4.49 Comment end dash state\n//------------------------------------------------------------------\n_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '-';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '-';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.50 Comment end state\n//------------------------------------------------------------------\n_[COMMENT_END_STATE] = function commentEndState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EXCLAMATION_MARK)\n        this.state = COMMENT_END_BANG_STATE;\n\n    else if (cp === $.HYPHEN_MINUS)\n        this.currentToken.data += '-';\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '--';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._reconsumeInState(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else {\n        this.currentToken.data += '--';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.51 Comment end bang state\n//------------------------------------------------------------------\n_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.currentToken.data += '--!';\n        this.state = COMMENT_END_DASH_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '--!';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '--!';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.52 DOCTYPE state\n//------------------------------------------------------------------\n_[DOCTYPE_STATE] = function doctypeState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._createDoctypeToken(null);\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._createDoctypeToken(null);\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n    else {\n        this._createDoctypeToken('');\n        this._reconsumeInState(DOCTYPE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.54 DOCTYPE name state\n//------------------------------------------------------------------\n_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {\n    if (isWhitespace(cp) || cp === $.GREATER_THAN_SIGN || cp === $.EOF)\n        this._reconsumeInState(AFTER_DOCTYPE_NAME_STATE);\n\n    else if (isAsciiUpper(cp))\n        this.currentToken.name += toAsciiLowerChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;\n\n    else\n        this.currentToken.name += toChar(cp);\n};\n\n\n//12.2.4.55 After DOCTYPE name state\n//------------------------------------------------------------------\n_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else {\n        var publicMatch = this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false),\n            systemMatch = !publicMatch && this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false);\n\n        if (!this._ensureHibernation()) {\n            if (publicMatch)\n                this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n\n            else if (systemMatch)\n                this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n            else {\n                this.currentToken.forceQuirks = true;\n                this.state = BOGUS_DOCTYPE_STATE;\n            }\n        }\n    }\n};\n\n\n//12.2.4.57 Before DOCTYPE public identifier state\n//------------------------------------------------------------------\n_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK) {\n        this.currentToken.publicId = '';\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.publicId = '';\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.58 DOCTYPE public identifier (double-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.publicId += toChar(cp);\n};\n\n\n//12.2.4.59 DOCTYPE public identifier (single-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.publicId += toChar(cp);\n};\n\n\n//12.2.4.61 Between DOCTYPE public and system identifiers state\n//------------------------------------------------------------------\n_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.QUOTATION_MARK) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.63 Before DOCTYPE system identifier state\n//------------------------------------------------------------------\n_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.64 DOCTYPE system identifier (double-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.systemId += toChar(cp);\n};\n\n\n//12.2.4.65 DOCTYPE system identifier (single-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.systemId += toChar(cp);\n};\n\n\n//12.2.4.66 After DOCTYPE system identifier state\n//------------------------------------------------------------------\n_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.state = BOGUS_DOCTYPE_STATE;\n};\n\n\n//12.2.4.67 Bogus DOCTYPE state\n//------------------------------------------------------------------\n_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n};\n\n\n//12.2.4.68 CDATA section state\n//------------------------------------------------------------------\n_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {\n    while (true) {\n        if (cp === $.EOF) {\n            this._reconsumeInState(DATA_STATE);\n            break;\n        }\n\n        else {\n            var cdataEndMatch = this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true);\n\n            if (this._ensureHibernation())\n                break;\n\n            if (cdataEndMatch) {\n                this.state = DATA_STATE;\n                break;\n            }\n\n            this._emitCodePoint(cp);\n\n            this._hibernationSnapshot();\n            cp = this._consume();\n\n            if (this._ensureHibernation())\n                break;\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}