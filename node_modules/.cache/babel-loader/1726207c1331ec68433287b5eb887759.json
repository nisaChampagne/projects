{"ast":null,"code":"import React from \"react\";\n\nconst OperatorButton = props => {\n  return React.createElement(React.Fragment, null, operators.map(operator => OperatorButton(operator['char'], operator['value'], props.onClickOperator)));\n};\n\nexport default OperatorButton;","map":{"version":3,"sources":["/Users/lambda_school_loaner_244/Desktop/LAMBDA/projects/projects/projectholder/src/projects/calculator/ButtonComponents/OperatoButtons/Operator/operatorbuttons.js"],"names":["React","OperatorButton","props","operators","map","operator","onClickOperator"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,SACE,0CAGIC,SAAS,CAACC,GAAV,CAAcC,QAAQ,IAAIJ,cAAc,CAACI,QAAQ,CAAC,MAAD,CAAT,EAAmBA,QAAQ,CAAC,OAAD,CAA3B,EAAsCH,KAAK,CAACI,eAA5C,CAAxC,CAHJ,CADF;AAQD,CATD;;AAWA,eAAeL,cAAf","sourcesContent":["import React from \"react\";\n\nconst OperatorButton = (props) => {\n  return (\n    <>\n      {/* Display a button element rendering the data being passed down from the parent container on props */}\n      {\n        operators.map(operator => OperatorButton(operator['char'], operator['value'], props.onClickOperator))\n      }    \n      </>\n  );\n};\n\nexport default OperatorButton;"]},"metadata":{},"sourceType":"module"}