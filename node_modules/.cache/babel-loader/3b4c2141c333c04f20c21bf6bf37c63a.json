{"ast":null,"code":"import _objectSpread from \"/Users/lambda_school_loaner_244/Desktop/LAMBDA/projects/projectsCollection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const TOGGLE_ITEM = \"TOGGLE_ITEM\";\nexport const CLEAR_COMPLETED = \"CLEAR_COMPLETED\";\nexport const initialState = {\n  todo: [{\n    name: \"Meal prep\",\n    id: 124,\n    completed: false\n  }, {\n    name: \"Go shopping\",\n    id: 1235,\n    completed: false\n  }, {\n    name: \"Get ready for bed\",\n    id: 1248,\n    completed: false\n  }]\n};\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ITEM:\n      console.log(action.payload.item);\n      const newItem = {\n        name: action.payload.item,\n        id: Date.now(),\n        completed: false\n      };\n      return _objectSpread({}, state, {\n        todo: [...state.todo, newItem]\n      });\n\n    case TOGGLE_ITEM:\n      return _objectSpread({}, state, {\n        todo: state.todo.map(item => {\n          if (action.payload === item.id) {\n            return _objectSpread({}, item, {\n              completed: !item.completed\n            });\n          }\n\n          return item;\n        })\n      });\n\n    case CLEAR_COMPLETED:\n      return _objectSpread({}, state, {\n        todo: state.todo.filter(item => !item.completed)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/lambda_school_loaner_244/Desktop/LAMBDA/projects/projectsCollection/src/projects/todoList/reducers/reducer.js"],"names":["ADD_ITEM","TOGGLE_ITEM","CLEAR_COMPLETED","initialState","todo","name","id","completed","reducer","state","action","type","console","log","payload","item","newItem","Date","now","map","filter"],"mappings":";AAAA,OAAO,MAAMA,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,CACJ;AACEC,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,EAAE,EAAE,GAFN;AAGEC,IAAAA,SAAS,EAAE;AAHb,GADI,EAMJ;AACEF,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,EAAE,EAAE,IAFN;AAGEC,IAAAA,SAAS,EAAE;AAHb,GANI,EAWJ;AACEF,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,EAAE,EAAE,IAFN;AAGEC,IAAAA,SAAS,EAAE;AAHb,GAXI;AADoB,CAArB;AAoBP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,QAAL;AACEY,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAP,CAAeC,IAA3B;AACA,YAAMC,OAAO,GAAG;AACdX,QAAAA,IAAI,EAAEK,MAAM,CAACI,OAAP,CAAeC,IADP;AAEdT,QAAAA,EAAE,EAAEW,IAAI,CAACC,GAAL,EAFU;AAGdX,QAAAA,SAAS,EAAE;AAHG,OAAhB;AAKA,+BACKE,KADL;AAEEL,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAgBY,OAAhB;AAFR;;AAIF,SAAKf,WAAL;AACE,+BACKQ,KADL;AAEEL,QAAAA,IAAI,EAAEK,KAAK,CAACL,IAAN,CAAWe,GAAX,CAAeJ,IAAI,IAAI;AAC3B,cAAIL,MAAM,CAACI,OAAP,KAAmBC,IAAI,CAACT,EAA5B,EAAgC;AAC9B,qCACKS,IADL;AAEER,cAAAA,SAAS,EAAE,CAACQ,IAAI,CAACR;AAFnB;AAID;;AACD,iBAAOQ,IAAP;AACD,SARK;AAFR;;AAYF,SAAKb,eAAL;AACE,+BACKO,KADL;AAEEL,QAAAA,IAAI,EAAEK,KAAK,CAACL,IAAN,CAAWgB,MAAX,CAAkBL,IAAI,IAAI,CAACA,IAAI,CAACR,SAAhC;AAFR;;AAIF;AACE,aAAOE,KAAP;AA/BJ;AAiCD,CAlCM","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\nexport const TOGGLE_ITEM = \"TOGGLE_ITEM\";\nexport const CLEAR_COMPLETED = \"CLEAR_COMPLETED\";\n\nexport const initialState = {\n  todo: [\n    {\n      name: \"Meal prep\",\n      id: 124,\n      completed: false\n    },\n    {\n      name: \"Go shopping\",\n      id: 1235,\n      completed: false\n    },\n    {\n      name: \"Get ready for bed\",\n      id: 1248,\n      completed: false\n    }\n  ]\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ITEM:\n      console.log(action.payload.item);\n      const newItem = {\n        name: action.payload.item,\n        id: Date.now(),\n        completed: false\n      };\n      return {\n        ...state,\n        todo: [...state.todo, newItem]\n      };\n    case TOGGLE_ITEM:\n      return {\n        ...state,\n        todo: state.todo.map(item => {\n          if (action.payload === item.id) {\n            return {\n              ...item,\n              completed: !item.completed\n            };\n          }\n          return item;\n        })\n      };\n    case CLEAR_COMPLETED:\n      return {\n        ...state,\n        todo: state.todo.filter(item => !item.completed)\n      };\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}