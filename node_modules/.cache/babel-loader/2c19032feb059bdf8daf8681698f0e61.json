{"ast":null,"code":"'use strict';\n\nvar htmlParser = require('parse5');\n\nvar React = require('react');\n\nvar convertAttr = require('react-attr-converter');\n\nvar styleParser = require('./lib/style-parser');\n\nfunction renderNode(node, key) {\n  if (node.nodeName === '#text') {\n    return node.value;\n  }\n\n  if (node.nodeName === '#comment') {\n    return node.value;\n  }\n\n  var attr = node.attrs.reduce(function (result, attr) {\n    var name = convertAttr(attr.name);\n    result[name] = name === 'style' ? styleParser(attr.value) : attr.value;\n    return result;\n  }, {\n    key: key\n  });\n\n  if (node.childNodes.length === 0) {\n    return React.createElement(node.tagName, attr);\n  }\n\n  if (node.nodeName === 'script') {\n    attr.dangerouslySetInnerHTML = {\n      __html: node.childNodes[0].value\n    };\n    return React.createElement('script', attr);\n  }\n\n  var children = node.childNodes.map(renderNode);\n  return React.createElement(node.tagName, attr, children);\n}\n\nfunction renderHTML(html) {\n  var htmlAST = htmlParser.parseFragment(html);\n\n  if (htmlAST.childNodes.length === 0) {\n    return null;\n  }\n\n  var result = htmlAST.childNodes.map(renderNode);\n  return result.length === 1 ? result[0] : result;\n}\n\nmodule.exports = renderHTML;","map":{"version":3,"sources":["/Users/lambda_school_loaner_244/Desktop/LAMBDA/projects/projectsCollection/node_modules/react-render-html/index.js"],"names":["htmlParser","require","React","convertAttr","styleParser","renderNode","node","key","nodeName","value","attr","attrs","reduce","result","name","childNodes","length","createElement","tagName","dangerouslySetInnerHTML","__html","children","map","renderHTML","html","htmlAST","parseFragment","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,sBAAD,CAAzB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,oBAAD,CAAzB;;AAEA,SAASI,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AAC7B,MAAID,IAAI,CAACE,QAAL,KAAkB,OAAtB,EAA+B;AAC7B,WAAOF,IAAI,CAACG,KAAZ;AACD;;AAED,MAAIH,IAAI,CAACE,QAAL,KAAkB,UAAtB,EAAkC;AAChC,WAAOF,IAAI,CAACG,KAAZ;AACD;;AAED,MAAIC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWC,MAAX,CAAkB,UAAUC,MAAV,EAAkBH,IAAlB,EAAwB;AACnD,QAAII,IAAI,GAAGX,WAAW,CAACO,IAAI,CAACI,IAAN,CAAtB;AACAD,IAAAA,MAAM,CAACC,IAAD,CAAN,GAAeA,IAAI,KAAK,OAAT,GAAmBV,WAAW,CAACM,IAAI,CAACD,KAAN,CAA9B,GAA6CC,IAAI,CAACD,KAAjE;AACA,WAAOI,MAAP;AACD,GAJU,EAIR;AAACN,IAAAA,GAAG,EAAEA;AAAN,GAJQ,CAAX;;AAMA,MAAID,IAAI,CAACS,UAAL,CAAgBC,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,WAAOd,KAAK,CAACe,aAAN,CAAoBX,IAAI,CAACY,OAAzB,EAAkCR,IAAlC,CAAP;AACD;;AAED,MAAIJ,IAAI,CAACE,QAAL,KAAkB,QAAtB,EAAgC;AAC9BE,IAAAA,IAAI,CAACS,uBAAL,GAA+B;AAACC,MAAAA,MAAM,EAAEd,IAAI,CAACS,UAAL,CAAgB,CAAhB,EAAmBN;AAA5B,KAA/B;AACA,WAAOP,KAAK,CAACe,aAAN,CAAoB,QAApB,EAA8BP,IAA9B,CAAP;AACD;;AAED,MAAIW,QAAQ,GAAGf,IAAI,CAACS,UAAL,CAAgBO,GAAhB,CAAoBjB,UAApB,CAAf;AACA,SAAOH,KAAK,CAACe,aAAN,CAAoBX,IAAI,CAACY,OAAzB,EAAkCR,IAAlC,EAAwCW,QAAxC,CAAP;AACD;;AAED,SAASE,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIC,OAAO,GAAGzB,UAAU,CAAC0B,aAAX,CAAyBF,IAAzB,CAAd;;AAEA,MAAIC,OAAO,CAACV,UAAR,CAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;AACnC,WAAO,IAAP;AACD;;AAED,MAAIH,MAAM,GAAGY,OAAO,CAACV,UAAR,CAAmBO,GAAnB,CAAuBjB,UAAvB,CAAb;AAEA,SAAOQ,MAAM,CAACG,MAAP,KAAkB,CAAlB,GAAsBH,MAAM,CAAC,CAAD,CAA5B,GAAkCA,MAAzC;AACD;;AAEDc,MAAM,CAACC,OAAP,GAAiBL,UAAjB","sourcesContent":["'use strict';\n\nvar htmlParser = require('parse5');\nvar React = require('react');\nvar convertAttr = require('react-attr-converter');\nvar styleParser = require('./lib/style-parser');\n\nfunction renderNode(node, key) {\n  if (node.nodeName === '#text') {\n    return node.value;\n  }\n\n  if (node.nodeName === '#comment') {\n    return node.value;\n  }\n\n  var attr = node.attrs.reduce(function (result, attr) {\n    var name = convertAttr(attr.name);\n    result[name] = name === 'style' ? styleParser(attr.value) : attr.value;\n    return result;\n  }, {key: key});\n\n  if (node.childNodes.length === 0) {\n    return React.createElement(node.tagName, attr);\n  }\n\n  if (node.nodeName === 'script') {\n    attr.dangerouslySetInnerHTML = {__html: node.childNodes[0].value};\n    return React.createElement('script', attr);\n  }\n\n  var children = node.childNodes.map(renderNode);\n  return React.createElement(node.tagName, attr, children);\n}\n\nfunction renderHTML(html) {\n  var htmlAST = htmlParser.parseFragment(html);\n\n  if (htmlAST.childNodes.length === 0) {\n    return null;\n  }\n\n  var result = htmlAST.childNodes.map(renderNode);\n\n  return result.length === 1 ? result[0] : result;\n}\n\nmodule.exports = renderHTML;\n"]},"metadata":{},"sourceType":"script"}