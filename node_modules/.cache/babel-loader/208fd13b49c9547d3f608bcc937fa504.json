{"ast":null,"code":"var _jsxFileName = \"/Users/lambda_school_loaner_244/Desktop/LAMBDA/projects/projectsCollection/src/projects/blog/posts/post.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport './post.scss';\nimport moment from 'moment';\nimport Paper from '@material-ui/core';\nimport Divider from '@material-ui/core';\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.confirmDeletion = () => {\n      const id = this.props.info.id;\n      Swal.fire({\n        title: \"Delete this one?\",\n        text: \"This action can not be canceled!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: \"Yes, delete\",\n        cancelButtonText: \"No, cancel\"\n      }).then(result => {\n        if (result.value) {\n          this.props.deletePost(id);\n          Swal.fire('Press OK to back', 'The post has been deleted', 'Success');\n        }\n      });\n    };\n  }\n\n  render() {\n    const _this$props$info = this.props.info,\n          id = _this$props$info.id,\n          title = _this$props$info.title,\n          body = _this$props$info.body,\n          category = _this$props$info.category,\n          datestamp = _this$props$info.datestamp;\n    return React.createElement(Paper, {\n      className: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"post_title\",\n      cols: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"post-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, title.length > 25 ? `${title.substr(0, 25)}...` : title))), React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"post_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"post-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, body.length > 300 ? `${body.substr(0, 300)}...` : body)), React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"post_category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, category)), React.createElement(Divider, {\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"post_datestamp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, moment(datestamp).fromNow())), React.createElement(\"div\", {\n      className: \"post_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/post/${id}`,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" Show \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/edit/${id}`,\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" Edit \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Link, {\n      onClick: this.confirmDeletion,\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Delete\")))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/lambda_school_loaner_244/Desktop/LAMBDA/projects/projectsCollection/src/projects/blog/posts/post.js"],"names":["React","Component","Link","Swal","moment","Paper","Divider","Post","confirmDeletion","id","props","info","fire","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","deletePost","render","body","category","datestamp","length","substr","fromNow"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport './post.scss'\nimport moment from 'moment'\nimport Paper from '@material-ui/core'\nimport Divider from '@material-ui/core'\n\nclass Post extends Component{\n    confirmDeletion = () => {\n        const {id} = this.props.info\n\n        Swal.fire({\n            title: \"Delete this one?\",\n            text: \"This action can not be canceled!\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor:'#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: \"Yes, delete\",\n            cancelButtonText: \"No, cancel\"\n        }).then((result) => {\n            if(result.value){\n                this.props.deletePost(id)\n                Swal.fire(\n                    'Press OK to back',\n                    'The post has been deleted',\n                    'Success'\n                )\n            }\n        })\n    }\n\n    render(){\n        const { id, title,body,category, datestamp} = this.props.info\n\n        return(\n            <Paper className=\"post\">\n            <p className=\"post_title\" cols=\"10\">\n                <b><span className='post-preview'>\n                    {title.length > 25 ? `${title.substr(0, 25)}...` : title}\n                </span></b>\n            </p>\n            <Divider light />\n                <p className=\"post_body\">\n                    <span className='post-preview'>\n                        {body.length > 300 ? `${body.substr(0, 300)}...` : body}\n                    </span>\n                </p>\n                <Divider light />\n                <p className=\"post_category\"><b>{category}</b></p>\n                <Divider light />\n                <p className=\"post_datestamp\"><b>{moment(datestamp).fromNow()}</b></p>                \n                    <div className=\"post_button\">\n                        <ul className=\"buttons\">\n                            <li><Link to={`/post/${id}`} className=\"btn btn-primary\"> Show </Link></li>\n                            <li><Link to={`/edit/${id}`} className=\"btn btn-warning\"> Edit </Link></li>\n                            <li><Link onClick={this.confirmDeletion} className=\"btn btn-danger\">Delete</Link></li>\n                        </ul>\n                    </div>                   \n            </Paper>\n        )\n    }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}