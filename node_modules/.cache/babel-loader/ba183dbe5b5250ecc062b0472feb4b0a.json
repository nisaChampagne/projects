{"ast":null,"code":"'use strict';\n\nvar defaultTreeAdapter = require('../tree_adapters/default'),\n    mergeOptions = require('../utils/merge_options'),\n    doctype = require('../common/doctype'),\n    HTML = require('../common/html'); //Aliases\n\n\nvar $ = HTML.TAG_NAMES,\n    NS = HTML.NAMESPACES; //Default serializer options\n\nvar DEFAULT_OPTIONS = {\n  treeAdapter: defaultTreeAdapter\n}; //Escaping regexes\n\nvar AMP_REGEX = /&/g,\n    NBSP_REGEX = /\\u00a0/g,\n    DOUBLE_QUOTE_REGEX = /\"/g,\n    LT_REGEX = /</g,\n    GT_REGEX = />/g; //Serializer\n\nvar Serializer = module.exports = function (node, options) {\n  this.options = mergeOptions(DEFAULT_OPTIONS, options);\n  this.treeAdapter = this.options.treeAdapter;\n  this.html = '';\n  this.startNode = node;\n}; // NOTE: exported as static method for the testing purposes\n\n\nSerializer.escapeString = function (str, attrMode) {\n  str = str.replace(AMP_REGEX, '&amp;').replace(NBSP_REGEX, '&nbsp;');\n  if (attrMode) str = str.replace(DOUBLE_QUOTE_REGEX, '&quot;');else {\n    str = str.replace(LT_REGEX, '&lt;').replace(GT_REGEX, '&gt;');\n  }\n  return str;\n}; //API\n\n\nSerializer.prototype.serialize = function () {\n  this._serializeChildNodes(this.startNode);\n\n  return this.html;\n}; //Internals\n\n\nSerializer.prototype._serializeChildNodes = function (parentNode) {\n  var childNodes = this.treeAdapter.getChildNodes(parentNode);\n\n  if (childNodes) {\n    for (var i = 0, cnLength = childNodes.length; i < cnLength; i++) {\n      var currentNode = childNodes[i];\n      if (this.treeAdapter.isElementNode(currentNode)) this._serializeElement(currentNode);else if (this.treeAdapter.isTextNode(currentNode)) this._serializeTextNode(currentNode);else if (this.treeAdapter.isCommentNode(currentNode)) this._serializeCommentNode(currentNode);else if (this.treeAdapter.isDocumentTypeNode(currentNode)) this._serializeDocumentTypeNode(currentNode);\n    }\n  }\n};\n\nSerializer.prototype._serializeElement = function (node) {\n  var tn = this.treeAdapter.getTagName(node),\n      ns = this.treeAdapter.getNamespaceURI(node);\n  this.html += '<' + tn;\n\n  this._serializeAttributes(node);\n\n  this.html += '>';\n\n  if (tn !== $.AREA && tn !== $.BASE && tn !== $.BASEFONT && tn !== $.BGSOUND && tn !== $.BR && tn !== $.BR && tn !== $.COL && tn !== $.EMBED && tn !== $.FRAME && tn !== $.HR && tn !== $.IMG && tn !== $.INPUT && tn !== $.KEYGEN && tn !== $.LINK && tn !== $.MENUITEM && tn !== $.META && tn !== $.PARAM && tn !== $.SOURCE && tn !== $.TRACK && tn !== $.WBR) {\n    var childNodesHolder = tn === $.TEMPLATE && ns === NS.HTML ? this.treeAdapter.getTemplateContent(node) : node;\n\n    this._serializeChildNodes(childNodesHolder);\n\n    this.html += '</' + tn + '>';\n  }\n};\n\nSerializer.prototype._serializeAttributes = function (node) {\n  var attrs = this.treeAdapter.getAttrList(node);\n\n  for (var i = 0, attrsLength = attrs.length; i < attrsLength; i++) {\n    var attr = attrs[i],\n        value = Serializer.escapeString(attr.value, true);\n    this.html += ' ';\n    if (!attr.namespace) this.html += attr.name;else if (attr.namespace === NS.XML) this.html += 'xml:' + attr.name;else if (attr.namespace === NS.XMLNS) {\n      if (attr.name !== 'xmlns') this.html += 'xmlns:';\n      this.html += attr.name;\n    } else if (attr.namespace === NS.XLINK) this.html += 'xlink:' + attr.name;else this.html += attr.namespace + ':' + attr.name;\n    this.html += '=\"' + value + '\"';\n  }\n};\n\nSerializer.prototype._serializeTextNode = function (node) {\n  var content = this.treeAdapter.getTextNodeContent(node),\n      parent = this.treeAdapter.getParentNode(node),\n      parentTn = void 0;\n  if (parent && this.treeAdapter.isElementNode(parent)) parentTn = this.treeAdapter.getTagName(parent);\n  if (parentTn === $.STYLE || parentTn === $.SCRIPT || parentTn === $.XMP || parentTn === $.IFRAME || parentTn === $.NOEMBED || parentTn === $.NOFRAMES || parentTn === $.PLAINTEXT || parentTn === $.NOSCRIPT) this.html += content;else this.html += Serializer.escapeString(content, false);\n};\n\nSerializer.prototype._serializeCommentNode = function (node) {\n  this.html += '<!--' + this.treeAdapter.getCommentNodeContent(node) + '-->';\n};\n\nSerializer.prototype._serializeDocumentTypeNode = function (node) {\n  var name = this.treeAdapter.getDocumentTypeNodeName(node);\n  this.html += '<' + doctype.serializeContent(name, null, null) + '>';\n};","map":{"version":3,"sources":["/Users/lambda_school_loaner_244/Desktop/LAMBDA/projects/projectsCollection/node_modules/parse5/lib/serializer/index.js"],"names":["defaultTreeAdapter","require","mergeOptions","doctype","HTML","$","TAG_NAMES","NS","NAMESPACES","DEFAULT_OPTIONS","treeAdapter","AMP_REGEX","NBSP_REGEX","DOUBLE_QUOTE_REGEX","LT_REGEX","GT_REGEX","Serializer","module","exports","node","options","html","startNode","escapeString","str","attrMode","replace","prototype","serialize","_serializeChildNodes","parentNode","childNodes","getChildNodes","i","cnLength","length","currentNode","isElementNode","_serializeElement","isTextNode","_serializeTextNode","isCommentNode","_serializeCommentNode","isDocumentTypeNode","_serializeDocumentTypeNode","tn","getTagName","ns","getNamespaceURI","_serializeAttributes","AREA","BASE","BASEFONT","BGSOUND","BR","COL","EMBED","FRAME","HR","IMG","INPUT","KEYGEN","LINK","MENUITEM","META","PARAM","SOURCE","TRACK","WBR","childNodesHolder","TEMPLATE","getTemplateContent","attrs","getAttrList","attrsLength","attr","value","namespace","name","XML","XMLNS","XLINK","content","getTextNodeContent","parent","getParentNode","parentTn","STYLE","SCRIPT","XMP","IFRAME","NOEMBED","NOFRAMES","PLAINTEXT","NOSCRIPT","getCommentNodeContent","getDocumentTypeNodeName","serializeContent"],"mappings":"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","sourcesContent":["'use strict';\n\nvar defaultTreeAdapter = require('../tree_adapters/default'),\n    mergeOptions = require('../utils/merge_options'),\n    doctype = require('../common/doctype'),\n    HTML = require('../common/html');\n\n//Aliases\nvar $ = HTML.TAG_NAMES,\n    NS = HTML.NAMESPACES;\n\n//Default serializer options\nvar DEFAULT_OPTIONS = {\n    treeAdapter: defaultTreeAdapter\n};\n\n//Escaping regexes\nvar AMP_REGEX = /&/g,\n    NBSP_REGEX = /\\u00a0/g,\n    DOUBLE_QUOTE_REGEX = /\"/g,\n    LT_REGEX = /</g,\n    GT_REGEX = />/g;\n\n//Serializer\nvar Serializer = module.exports = function (node, options) {\n    this.options = mergeOptions(DEFAULT_OPTIONS, options);\n    this.treeAdapter = this.options.treeAdapter;\n\n    this.html = '';\n    this.startNode = node;\n};\n\n// NOTE: exported as static method for the testing purposes\nSerializer.escapeString = function (str, attrMode) {\n    str = str\n        .replace(AMP_REGEX, '&amp;')\n        .replace(NBSP_REGEX, '&nbsp;');\n\n    if (attrMode)\n        str = str.replace(DOUBLE_QUOTE_REGEX, '&quot;');\n\n    else {\n        str = str\n            .replace(LT_REGEX, '&lt;')\n            .replace(GT_REGEX, '&gt;');\n    }\n\n    return str;\n};\n\n\n//API\nSerializer.prototype.serialize = function () {\n    this._serializeChildNodes(this.startNode);\n\n    return this.html;\n};\n\n\n//Internals\nSerializer.prototype._serializeChildNodes = function (parentNode) {\n    var childNodes = this.treeAdapter.getChildNodes(parentNode);\n\n    if (childNodes) {\n        for (var i = 0, cnLength = childNodes.length; i < cnLength; i++) {\n            var currentNode = childNodes[i];\n\n            if (this.treeAdapter.isElementNode(currentNode))\n                this._serializeElement(currentNode);\n\n            else if (this.treeAdapter.isTextNode(currentNode))\n                this._serializeTextNode(currentNode);\n\n            else if (this.treeAdapter.isCommentNode(currentNode))\n                this._serializeCommentNode(currentNode);\n\n            else if (this.treeAdapter.isDocumentTypeNode(currentNode))\n                this._serializeDocumentTypeNode(currentNode);\n        }\n    }\n};\n\nSerializer.prototype._serializeElement = function (node) {\n    var tn = this.treeAdapter.getTagName(node),\n        ns = this.treeAdapter.getNamespaceURI(node);\n\n    this.html += '<' + tn;\n    this._serializeAttributes(node);\n    this.html += '>';\n\n    if (tn !== $.AREA && tn !== $.BASE && tn !== $.BASEFONT && tn !== $.BGSOUND && tn !== $.BR && tn !== $.BR &&\n        tn !== $.COL && tn !== $.EMBED && tn !== $.FRAME && tn !== $.HR && tn !== $.IMG && tn !== $.INPUT &&\n        tn !== $.KEYGEN && tn !== $.LINK && tn !== $.MENUITEM && tn !== $.META && tn !== $.PARAM && tn !== $.SOURCE &&\n        tn !== $.TRACK && tn !== $.WBR) {\n\n        var childNodesHolder = tn === $.TEMPLATE && ns === NS.HTML ?\n            this.treeAdapter.getTemplateContent(node) :\n            node;\n\n        this._serializeChildNodes(childNodesHolder);\n        this.html += '</' + tn + '>';\n    }\n};\n\nSerializer.prototype._serializeAttributes = function (node) {\n    var attrs = this.treeAdapter.getAttrList(node);\n\n    for (var i = 0, attrsLength = attrs.length; i < attrsLength; i++) {\n        var attr = attrs[i],\n            value = Serializer.escapeString(attr.value, true);\n\n        this.html += ' ';\n\n        if (!attr.namespace)\n            this.html += attr.name;\n\n        else if (attr.namespace === NS.XML)\n            this.html += 'xml:' + attr.name;\n\n        else if (attr.namespace === NS.XMLNS) {\n            if (attr.name !== 'xmlns')\n                this.html += 'xmlns:';\n\n            this.html += attr.name;\n        }\n\n        else if (attr.namespace === NS.XLINK)\n            this.html += 'xlink:' + attr.name;\n\n        else\n            this.html += attr.namespace + ':' + attr.name;\n\n        this.html += '=\"' + value + '\"';\n    }\n};\n\nSerializer.prototype._serializeTextNode = function (node) {\n    var content = this.treeAdapter.getTextNodeContent(node),\n        parent = this.treeAdapter.getParentNode(node),\n        parentTn = void 0;\n\n    if (parent && this.treeAdapter.isElementNode(parent))\n        parentTn = this.treeAdapter.getTagName(parent);\n\n    if (parentTn === $.STYLE || parentTn === $.SCRIPT || parentTn === $.XMP || parentTn === $.IFRAME ||\n        parentTn === $.NOEMBED || parentTn === $.NOFRAMES || parentTn === $.PLAINTEXT || parentTn === $.NOSCRIPT)\n\n        this.html += content;\n\n    else\n        this.html += Serializer.escapeString(content, false);\n};\n\nSerializer.prototype._serializeCommentNode = function (node) {\n    this.html += '<!--' + this.treeAdapter.getCommentNodeContent(node) + '-->';\n};\n\nSerializer.prototype._serializeDocumentTypeNode = function (node) {\n    var name = this.treeAdapter.getDocumentTypeNodeName(node);\n\n    this.html += '<' + doctype.serializeContent(name, null, null) + '>';\n};\n"]},"metadata":{},"sourceType":"script"}