{"ast":null,"code":"'use strict';\n\nvar Mixin = require('../../utils/mixin'),\n    Tokenizer = require('../../tokenizer'),\n    PositionTrackingPreprocessorMixin = require('../position_tracking/preprocessor_mixin'),\n    inherits = require('util').inherits;\n\nvar LocationInfoTokenizerMixin = module.exports = function (tokenizer) {\n  Mixin.call(this, tokenizer);\n  this.tokenizer = tokenizer;\n  this.posTracker = new PositionTrackingPreprocessorMixin(tokenizer.preprocessor);\n  this.currentAttrLocation = null;\n  this.currentTokenLocation = null;\n};\n\ninherits(LocationInfoTokenizerMixin, Mixin);\n\nLocationInfoTokenizerMixin.prototype._getCurrentLocation = function () {\n  return {\n    line: this.posTracker.line,\n    col: this.posTracker.col,\n    startOffset: this.posTracker.offset,\n    endOffset: -1\n  };\n};\n\nLocationInfoTokenizerMixin.prototype._attachCurrentAttrLocationInfo = function () {\n  this.currentAttrLocation.endOffset = this.posTracker.offset;\n  var currentToken = this.tokenizer.currentToken,\n      currentAttr = this.tokenizer.currentAttr;\n  if (!currentToken.location.attrs) currentToken.location.attrs = Object.create(null);\n  currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n};\n\nLocationInfoTokenizerMixin.prototype._getOverriddenMethods = function (mxn, orig) {\n  var methods = {\n    _createStartTagToken: function () {\n      orig._createStartTagToken.call(this);\n\n      this.currentToken.location = mxn.currentTokenLocation;\n    },\n    _createEndTagToken: function () {\n      orig._createEndTagToken.call(this);\n\n      this.currentToken.location = mxn.currentTokenLocation;\n    },\n    _createCommentToken: function () {\n      orig._createCommentToken.call(this);\n\n      this.currentToken.location = mxn.currentTokenLocation;\n    },\n    _createDoctypeToken: function (initialName) {\n      orig._createDoctypeToken.call(this, initialName);\n\n      this.currentToken.location = mxn.currentTokenLocation;\n    },\n    _createCharacterToken: function (type, ch) {\n      orig._createCharacterToken.call(this, type, ch);\n\n      this.currentCharacterToken.location = mxn.currentTokenLocation;\n    },\n    _createAttr: function (attrNameFirstCh) {\n      orig._createAttr.call(this, attrNameFirstCh);\n\n      mxn.currentAttrLocation = mxn._getCurrentLocation();\n    },\n    _leaveAttrName: function (toState) {\n      orig._leaveAttrName.call(this, toState);\n\n      mxn._attachCurrentAttrLocationInfo();\n    },\n    _leaveAttrValue: function (toState) {\n      orig._leaveAttrValue.call(this, toState);\n\n      mxn._attachCurrentAttrLocationInfo();\n    },\n    _emitCurrentToken: function () {\n      //NOTE: if we have pending character token make it's end location equal to the\n      //current token's start location.\n      if (this.currentCharacterToken) this.currentCharacterToken.location.endOffset = this.currentToken.location.startOffset;\n      this.currentToken.location.endOffset = mxn.posTracker.offset + 1;\n\n      orig._emitCurrentToken.call(this);\n    },\n    _emitCurrentCharacterToken: function () {\n      //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n      //then set it's location at the current preprocessor position.\n      //We don't need to increment preprocessor position, since character token\n      //emission is always forced by the start of the next character token here.\n      //So, we already have advanced position.\n      if (this.currentCharacterToken && this.currentCharacterToken.location.endOffset === -1) this.currentCharacterToken.location.endOffset = mxn.posTracker.offset;\n\n      orig._emitCurrentCharacterToken.call(this);\n    }\n  }; //NOTE: patch initial states for each mode to obtain token start position\n\n  Object.keys(Tokenizer.MODE).forEach(function (modeName) {\n    var state = Tokenizer.MODE[modeName];\n\n    methods[state] = function (cp) {\n      mxn.currentTokenLocation = mxn._getCurrentLocation();\n      orig[state].call(this, cp);\n    };\n  });\n  return methods;\n};","map":{"version":3,"sources":["/Users/lambda_school_loaner_244/Desktop/LAMBDA/projects/projectsCollection/node_modules/parse5/lib/extensions/location_info/tokenizer_mixin.js"],"names":["Mixin","require","Tokenizer","PositionTrackingPreprocessorMixin","inherits","LocationInfoTokenizerMixin","module","exports","tokenizer","call","posTracker","preprocessor","currentAttrLocation","currentTokenLocation","prototype","_getCurrentLocation","line","col","startOffset","offset","endOffset","_attachCurrentAttrLocationInfo","currentToken","currentAttr","location","attrs","Object","create","name","_getOverriddenMethods","mxn","orig","methods","_createStartTagToken","_createEndTagToken","_createCommentToken","_createDoctypeToken","initialName","_createCharacterToken","type","ch","currentCharacterToken","_createAttr","attrNameFirstCh","_leaveAttrName","toState","_leaveAttrValue","_emitCurrentToken","_emitCurrentCharacterToken","keys","MODE","forEach","modeName","state","cp"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Mixin = require('../../utils/mixin'),\n    Tokenizer = require('../../tokenizer'),\n    PositionTrackingPreprocessorMixin = require('../position_tracking/preprocessor_mixin'),\n    inherits = require('util').inherits;\n\nvar LocationInfoTokenizerMixin = module.exports = function (tokenizer) {\n    Mixin.call(this, tokenizer);\n\n    this.tokenizer = tokenizer;\n    this.posTracker = new PositionTrackingPreprocessorMixin(tokenizer.preprocessor);\n    this.currentAttrLocation = null;\n    this.currentTokenLocation = null;\n};\n\ninherits(LocationInfoTokenizerMixin, Mixin);\n\nLocationInfoTokenizerMixin.prototype._getCurrentLocation = function () {\n    return {\n        line: this.posTracker.line,\n        col: this.posTracker.col,\n        startOffset: this.posTracker.offset,\n        endOffset: -1\n    };\n};\n\nLocationInfoTokenizerMixin.prototype._attachCurrentAttrLocationInfo = function () {\n    this.currentAttrLocation.endOffset = this.posTracker.offset;\n\n    var currentToken = this.tokenizer.currentToken,\n        currentAttr = this.tokenizer.currentAttr;\n\n    if (!currentToken.location.attrs)\n        currentToken.location.attrs = Object.create(null);\n\n    currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n};\n\nLocationInfoTokenizerMixin.prototype._getOverriddenMethods = function (mxn, orig) {\n    var methods = {\n        _createStartTagToken: function () {\n            orig._createStartTagToken.call(this);\n            this.currentToken.location = mxn.currentTokenLocation;\n        },\n\n        _createEndTagToken: function () {\n            orig._createEndTagToken.call(this);\n            this.currentToken.location = mxn.currentTokenLocation;\n        },\n\n        _createCommentToken: function () {\n            orig._createCommentToken.call(this);\n            this.currentToken.location = mxn.currentTokenLocation;\n        },\n\n        _createDoctypeToken: function (initialName) {\n            orig._createDoctypeToken.call(this, initialName);\n            this.currentToken.location = mxn.currentTokenLocation;\n        },\n\n        _createCharacterToken: function (type, ch) {\n            orig._createCharacterToken.call(this, type, ch);\n            this.currentCharacterToken.location = mxn.currentTokenLocation;\n        },\n\n        _createAttr: function (attrNameFirstCh) {\n            orig._createAttr.call(this, attrNameFirstCh);\n            mxn.currentAttrLocation = mxn._getCurrentLocation();\n        },\n\n        _leaveAttrName: function (toState) {\n            orig._leaveAttrName.call(this, toState);\n            mxn._attachCurrentAttrLocationInfo();\n        },\n\n        _leaveAttrValue: function (toState) {\n            orig._leaveAttrValue.call(this, toState);\n            mxn._attachCurrentAttrLocationInfo();\n        },\n\n        _emitCurrentToken: function () {\n            //NOTE: if we have pending character token make it's end location equal to the\n            //current token's start location.\n            if (this.currentCharacterToken)\n                this.currentCharacterToken.location.endOffset = this.currentToken.location.startOffset;\n\n            this.currentToken.location.endOffset = mxn.posTracker.offset + 1;\n            orig._emitCurrentToken.call(this);\n        },\n\n        _emitCurrentCharacterToken: function () {\n            //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n            //then set it's location at the current preprocessor position.\n            //We don't need to increment preprocessor position, since character token\n            //emission is always forced by the start of the next character token here.\n            //So, we already have advanced position.\n            if (this.currentCharacterToken && this.currentCharacterToken.location.endOffset === -1)\n                this.currentCharacterToken.location.endOffset = mxn.posTracker.offset;\n\n            orig._emitCurrentCharacterToken.call(this);\n        }\n    };\n\n    //NOTE: patch initial states for each mode to obtain token start position\n    Object.keys(Tokenizer.MODE).forEach(function (modeName) {\n        var state = Tokenizer.MODE[modeName];\n\n        methods[state] = function (cp) {\n            mxn.currentTokenLocation = mxn._getCurrentLocation();\n            orig[state].call(this, cp);\n        };\n    });\n\n    return methods;\n};\n\n"]},"metadata":{},"sourceType":"script"}