{"ast":null,"code":"'use strict';\n\nvar ReadableStream = require('stream').Readable,\n    inherits = require('util').inherits,\n    Serializer = require('./index');\n\nvar SerializerStream = module.exports = function (node, options) {\n  ReadableStream.call(this);\n  this.serializer = new Serializer(node, options);\n  Object.defineProperty(this.serializer, 'html', {\n    //NOTE: To make `+=` concat operator work properly we define\n    //getter which always returns empty string\n    get: function () {\n      return '';\n    },\n    set: this.push.bind(this)\n  });\n};\n\ninherits(SerializerStream, ReadableStream); //Readable stream implementation\n\nSerializerStream.prototype._read = function () {\n  this.serializer.serialize();\n  this.push(null);\n};","map":{"version":3,"sources":["/Users/lambda_school_loaner_244/Desktop/LAMBDA/projects/projectsCollection/node_modules/parse5/lib/serializer/serializer_stream.js"],"names":["ReadableStream","require","Readable","inherits","Serializer","SerializerStream","module","exports","node","options","call","serializer","Object","defineProperty","get","set","push","bind","prototype","_read","serialize"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBC,QAAvC;AAAA,IACIC,QAAQ,GAAGF,OAAO,CAAC,MAAD,CAAP,CAAgBE,QAD/B;AAAA,IAEIC,UAAU,GAAGH,OAAO,CAAC,SAAD,CAFxB;;AAIA,IAAII,gBAAgB,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAC7DT,EAAAA,cAAc,CAACU,IAAf,CAAoB,IAApB;AAEA,OAAKC,UAAL,GAAkB,IAAIP,UAAJ,CAAeI,IAAf,EAAqBC,OAArB,CAAlB;AAEAG,EAAAA,MAAM,CAACC,cAAP,CAAsB,KAAKF,UAA3B,EAAuC,MAAvC,EAA+C;AAC3C;AACA;AACAG,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,EAAP;AACH,KAL0C;AAM3CC,IAAAA,GAAG,EAAE,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf;AANsC,GAA/C;AAQH,CAbD;;AAeAd,QAAQ,CAACE,gBAAD,EAAmBL,cAAnB,CAAR,C,CAEA;;AACAK,gBAAgB,CAACa,SAAjB,CAA2BC,KAA3B,GAAmC,YAAY;AAC3C,OAAKR,UAAL,CAAgBS,SAAhB;AACA,OAAKJ,IAAL,CAAU,IAAV;AACH,CAHD","sourcesContent":["'use strict';\n\nvar ReadableStream = require('stream').Readable,\n    inherits = require('util').inherits,\n    Serializer = require('./index');\n\nvar SerializerStream = module.exports = function (node, options) {\n    ReadableStream.call(this);\n\n    this.serializer = new Serializer(node, options);\n\n    Object.defineProperty(this.serializer, 'html', {\n        //NOTE: To make `+=` concat operator work properly we define\n        //getter which always returns empty string\n        get: function () {\n            return '';\n        },\n        set: this.push.bind(this)\n    });\n};\n\ninherits(SerializerStream, ReadableStream);\n\n//Readable stream implementation\nSerializerStream.prototype._read = function () {\n    this.serializer.serialize();\n    this.push(null);\n};\n"]},"metadata":{},"sourceType":"script"}